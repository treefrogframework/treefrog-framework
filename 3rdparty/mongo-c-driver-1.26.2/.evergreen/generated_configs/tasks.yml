tasks:
  - name: abi-compliance-check
    commands:
      - func: abi-compliance-check
  - name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile
    run_on: ubuntu1804-large
    tags: [sanitizers-matrix-asan, compile, ubuntu1804, clang, cse, asan, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-test-4.2-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, cse, asan, auth, server, "4.2", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-test-4.2-server-auth-with-mongocrypt
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, cse, asan, auth, server, "4.2", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-test-4.4-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, cse, asan, auth, server, "4.4", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-test-4.4-server-auth-with-mongocrypt
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, cse, asan, auth, server, "4.4", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-test-5.0-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, cse, asan, auth, server, "5.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-test-5.0-server-auth-with-mongocrypt
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, cse, asan, auth, server, "5.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-test-6.0-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, cse, asan, auth, server, "6.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-test-6.0-server-auth-with-mongocrypt
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, cse, asan, auth, server, "6.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [sanitizers-matrix-asan, compile, ubuntu2004, clang, cse, asan, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-replica-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, cse, asan, auth, replica, "7.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-replica-auth-with-mongocrypt
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, cse, asan, auth, replica, "7.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-server-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, cse, asan, auth, server, "7.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-server-auth-with-mongocrypt
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, cse, asan, auth, server, "7.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-replica-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, cse, asan, auth, replica, latest, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-replica-auth-with-mongocrypt
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, cse, asan, auth, replica, latest, with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-server-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, cse, asan, auth, server, latest, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-server-auth-with-mongocrypt
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, cse, asan, auth, server, latest, with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1604-clang-compile
    run_on: ubuntu1604-large
    tags: [sanitizers-matrix-asan, compile, ubuntu1604, clang, asan, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: asan-sasl-cyrus-openssl-ubuntu1604-clang-test-3.6-replica-auth
    run_on: ubuntu1604-small
    tags: [sanitizers-matrix-asan, test, ubuntu1604, clang, sasl-cyrus, asan, auth, replica, "3.6", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1604-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1604-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "3.6" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1604-clang-test-3.6-server-auth
    run_on: ubuntu1604-small
    tags: [sanitizers-matrix-asan, test, ubuntu1604, clang, sasl-cyrus, asan, auth, server, "3.6", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1604-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1604-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "3.6" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1604-clang-test-3.6-sharded-auth
    run_on: ubuntu1604-small
    tags: [sanitizers-matrix-asan, test, ubuntu1604, clang, sasl-cyrus, asan, auth, sharded, "3.6", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1604-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1604-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "3.6" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
    run_on: ubuntu1804-large
    tags: [sanitizers-matrix-asan, compile, ubuntu1804, clang, asan, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.0-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, replica, "4.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.0-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, server, "4.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.0-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, sharded, "4.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.2-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, replica, "4.2", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.2-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, server, "4.2", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.2-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, sharded, "4.2", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.4-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, replica, "4.4", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.4-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, server, "4.4", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.4-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, sharded, "4.4", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-5.0-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, replica, "5.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-5.0-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, server, "5.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-5.0-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, sharded, "5.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-6.0-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, replica, "6.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-6.0-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, server, "6.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu1804-clang-test-6.0-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-asan, test, ubuntu1804, clang, sasl-cyrus, asan, auth, sharded, "6.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [sanitizers-matrix-asan, compile, ubuntu2004, clang, asan, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: asan-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-replica-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, asan, auth, replica, "7.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-server-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, asan, auth, server, "7.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-sharded-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, asan, auth, sharded, "7.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-replica-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, asan, auth, replica, latest, openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-server-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, asan, auth, server, latest, openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-sharded-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-asan, test, ubuntu2004, clang, sasl-cyrus, asan, auth, sharded, latest, openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: check-headers
    commands:
      - func: check-headers
  - name: "check:sasl=Cyrus\u2022tls=LibreSSL\u2022test_mongocxx_ref=master"
    run_on:
      - ubuntu2204-small
      - ubuntu2204-large
      - ubuntu2004-small
      - ubuntu2004
      - ubuntu1804
      - ubuntu1804-medium
      - debian10
      - debian11
      - amazon2
    tags: [earthly, pr-merge-gate, earthly-alpine3.18, earthly-archlinux]
    commands:
      - command: subprocess.exec
        type: setup
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +env-warmup
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=LibreSSL
            - --test_mongocxx_ref=master
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +run
            - --targets=test-example test-cxx-driver
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=LibreSSL
            - --test_mongocxx_ref=master
  - name: "check:sasl=Cyrus\u2022tls=LibreSSL\u2022test_mongocxx_ref=r3.8.0"
    run_on:
      - ubuntu2204-small
      - ubuntu2204-large
      - ubuntu2004-small
      - ubuntu2004
      - ubuntu1804
      - ubuntu1804-medium
      - debian10
      - debian11
      - amazon2
    tags: [earthly, pr-merge-gate, earthly-alpine3.18, earthly-archlinux]
    commands:
      - command: subprocess.exec
        type: setup
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +env-warmup
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=LibreSSL
            - --test_mongocxx_ref=r3.8.0
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +run
            - --targets=test-example test-cxx-driver
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=LibreSSL
            - --test_mongocxx_ref=r3.8.0
  - name: "check:sasl=Cyrus\u2022tls=OpenSSL\u2022test_mongocxx_ref=master"
    run_on:
      - ubuntu2204-small
      - ubuntu2204-large
      - ubuntu2004-small
      - ubuntu2004
      - ubuntu1804
      - ubuntu1804-medium
      - debian10
      - debian11
      - amazon2
    tags: [earthly, pr-merge-gate, earthly-alpine3.18, earthly-archlinux, earthly-u22]
    commands:
      - command: subprocess.exec
        type: setup
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +env-warmup
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=master
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +run
            - --targets=test-example test-cxx-driver
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=master
  - name: "check:sasl=Cyrus\u2022tls=OpenSSL\u2022test_mongocxx_ref=r3.8.0"
    run_on:
      - ubuntu2204-small
      - ubuntu2204-large
      - ubuntu2004-small
      - ubuntu2004
      - ubuntu1804
      - ubuntu1804-medium
      - debian10
      - debian11
      - amazon2
    tags: [earthly, pr-merge-gate, earthly-alpine3.18, earthly-archlinux, earthly-u22]
    commands:
      - command: subprocess.exec
        type: setup
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +env-warmup
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=r3.8.0
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +run
            - --targets=test-example test-cxx-driver
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=r3.8.0
  - name: "check:sasl=Cyrus\u2022tls=off\u2022test_mongocxx_ref=master"
    run_on:
      - ubuntu2204-small
      - ubuntu2204-large
      - ubuntu2004-small
      - ubuntu2004
      - ubuntu1804
      - ubuntu1804-medium
      - debian10
      - debian11
      - amazon2
    tags: [earthly, pr-merge-gate, earthly-alpine3.18, earthly-archlinux, earthly-u22]
    commands:
      - command: subprocess.exec
        type: setup
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +env-warmup
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=master
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +run
            - --targets=test-example test-cxx-driver
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=master
  - name: "check:sasl=Cyrus\u2022tls=off\u2022test_mongocxx_ref=r3.8.0"
    run_on:
      - ubuntu2204-small
      - ubuntu2204-large
      - ubuntu2004-small
      - ubuntu2004
      - ubuntu1804
      - ubuntu1804-medium
      - debian10
      - debian11
      - amazon2
    tags: [earthly, pr-merge-gate, earthly-alpine3.18, earthly-archlinux, earthly-u22]
    commands:
      - command: subprocess.exec
        type: setup
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +env-warmup
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=r3.8.0
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +run
            - --targets=test-example test-cxx-driver
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=r3.8.0
  - name: "check:sasl=off\u2022tls=OpenSSL\u2022test_mongocxx_ref=master"
    run_on:
      - ubuntu2204-small
      - ubuntu2204-large
      - ubuntu2004-small
      - ubuntu2004
      - ubuntu1804
      - ubuntu1804-medium
      - debian10
      - debian11
      - amazon2
    tags: [earthly, pr-merge-gate, earthly-u22]
    commands:
      - command: subprocess.exec
        type: setup
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +env-warmup
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=off
            - --tls=OpenSSL
            - --test_mongocxx_ref=master
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          args:
            - tools/earthly.sh
            - +run
            - --targets=test-example test-cxx-driver
            - --env=${MONGOC_EARTHLY_ENV}
            - --sasl=off
            - --tls=OpenSSL
            - --test_mongocxx_ref=master
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, compile, macos-1100, clang, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-darwinssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-4.2-replica-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, replica, "4.2", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-4.2-server-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, server, "4.2", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-4.4-replica-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, replica, "4.4", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-4.4-server-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, server, "4.4", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-5.0-replica-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, replica, "5.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-5.0-server-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, server, "5.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-6.0-replica-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, replica, "6.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-6.0-server-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, server, "6.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-7.0-replica-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, replica, "7.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-7.0-server-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, server, "7.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-latest-replica-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, replica, latest, darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-1100-clang-test-latest-server-auth
    run_on: macos-1100
    tags: [cse-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, cse, auth, server, latest, darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-debian10-gcc-compile
    run_on: debian10-large
    tags: [cse-matrix-openssl, compile, debian10, gcc, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-debian11-gcc-compile
    run_on: debian11-large
    tags: [cse-matrix-openssl, compile, debian11, gcc, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-debian92-clang-compile
    run_on: debian92-large
    tags: [cse-matrix-openssl, compile, debian92, clang, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-debian92-gcc-compile
    run_on: debian92-large
    tags: [cse-matrix-openssl, compile, debian92, gcc, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-rhel80-gcc-compile
    run_on: rhel80-large
    tags: [cse-matrix-openssl, compile, rhel80, gcc, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile
    run_on: rhel83-zseries-large
    tags: [cse-matrix-openssl, compile, rhel83-zseries, gcc, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-test-5.0-server-auth
    run_on: rhel83-zseries-small
    tags: [cse-matrix-openssl, test, rhel83-zseries, gcc, sasl-cyrus, cse, auth, server, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-test-7.0-replica-auth
    run_on: rhel83-zseries-small
    tags: [cse-matrix-openssl, test, rhel83-zseries, gcc, sasl-cyrus, cse, auth, replica, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-test-7.0-server-auth
    run_on: rhel83-zseries-small
    tags: [cse-matrix-openssl, test, rhel83-zseries, gcc, sasl-cyrus, cse, auth, server, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-test-latest-replica-auth
    run_on: rhel83-zseries-small
    tags: [cse-matrix-openssl, test, rhel83-zseries, gcc, sasl-cyrus, cse, auth, replica, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-test-latest-server-auth
    run_on: rhel83-zseries-small
    tags: [cse-matrix-openssl, test, rhel83-zseries, gcc, sasl-cyrus, cse, auth, server, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel83-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu1604-clang-compile
    run_on: ubuntu1604-large
    tags: [cse-matrix-openssl, compile, ubuntu1604, clang, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
    run_on: ubuntu1804-arm64-large
    tags: [cse-matrix-openssl, compile, ubuntu1804-arm64, gcc, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-test-4.2-server-auth
    run_on: ubuntu1804-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu1804-arm64, gcc, sasl-cyrus, cse, auth, server, "4.2", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-test-4.4-server-auth
    run_on: ubuntu1804-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu1804-arm64, gcc, sasl-cyrus, cse, auth, server, "4.4", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-test-5.0-server-auth
    run_on: ubuntu1804-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu1804-arm64, gcc, sasl-cyrus, cse, auth, server, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-test-6.0-server-auth
    run_on: ubuntu1804-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu1804-arm64, gcc, sasl-cyrus, cse, auth, server, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu1804-gcc-compile
    run_on: ubuntu1804-large
    tags: [cse-matrix-openssl, compile, ubuntu1804, gcc, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu1804-gcc-test-4.2-server-auth
    run_on: ubuntu1804-small
    tags: [cse-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, cse, auth, server, "4.2", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu1804-gcc-test-4.4-server-auth
    run_on: ubuntu1804-small
    tags: [cse-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, cse, auth, server, "4.4", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu1804-gcc-test-5.0-server-auth
    run_on: ubuntu1804-small
    tags: [cse-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, cse, auth, server, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu1804-gcc-test-6.0-server-auth
    run_on: ubuntu1804-small
    tags: [cse-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, cse, auth, server, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
    run_on: ubuntu2004-arm64-large
    tags: [cse-matrix-openssl, compile, ubuntu2004-arm64, gcc, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-7.0-replica-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, replica, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-7.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, server, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-latest-replica-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, replica, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-latest-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, server, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile
    run_on: ubuntu2004-large
    tags: [cse-matrix-openssl, compile, ubuntu2004, gcc, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-test-7.0-replica-auth
    run_on: ubuntu2004-small
    tags: [cse-matrix-openssl, test, ubuntu2004, gcc, sasl-cyrus, cse, auth, replica, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-test-7.0-server-auth
    run_on: ubuntu2004-small
    tags: [cse-matrix-openssl, test, ubuntu2004, gcc, sasl-cyrus, cse, auth, server, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-test-latest-replica-auth
    run_on: ubuntu2004-small
    tags: [cse-matrix-openssl, test, ubuntu2004, gcc, sasl-cyrus, cse, auth, replica, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-test-latest-server-auth
    run_on: ubuntu2004-small
    tags: [cse-matrix-openssl, test, ubuntu2004, gcc, sasl-cyrus, cse, auth, server, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [cse-matrix-openssl, compile, windows-vsCurrent, vs2017x64, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: Visual Studio 15 2017 Win64
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-4.2-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "4.2", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-4.4-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "4.4", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-5.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-6.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-7.0-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-7.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-latest-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-vs2015-x64-compile
    run_on: windows-64-vs2015-large
    tags: [cse-matrix-winssl, compile, windows-64-vs2015, vs2015x64, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-winssl-compile
        vars:
          CC: Visual Studio 14 2015 Win64
      - func: upload-build
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [cse-matrix-winssl, compile, windows-vsCurrent, vs2017x64, cse, sasl-cyrus]
    commands:
      - func: cse-sasl-cyrus-winssl-compile
        vars:
          CC: Visual Studio 15 2017 Win64
      - func: upload-build
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-4.2-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "4.2", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-4.4-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "4.4", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-5.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "5.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-6.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "6.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-7.0-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "7.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-7.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "7.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-latest-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, latest, winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, latest, winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: kms-divergence-check
    commands:
      - func: kms-divergence-check
  - name: loadbalanced-rhel87-gcc-compile
    run_on: rhel87-large
    tags: [loadbalanced, rhel87, gcc]
    commands:
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          env:
            CC: gcc
            CFLAGS: -fno-omit-frame-pointer
            EXTRA_CONFIGURE_FLAGS: -DENABLE_EXTRA_ALIGNMENT=OFF
            SSL: OPENSSL
          args:
            - -c
            - .evergreen/scripts/compile.sh
      - func: upload-build
  - name: loadbalanced-rhel87-gcc-test-5.0-auth-openssl
    run_on: rhel87-small
    tags: [loadbalanced, rhel87, gcc, auth, openssl]
    depends_on: [{ name: loadbalanced-rhel87-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel87-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: auth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "5.0"
          SSL: openssl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: auth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: openssl
  - name: loadbalanced-rhel87-gcc-test-5.0-noauth-nossl
    run_on: rhel87-small
    tags: [loadbalanced, rhel87, gcc, noauth, nossl]
    depends_on: [{ name: loadbalanced-rhel87-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel87-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: noauth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "5.0"
          SSL: nossl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: noauth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: nossl
  - name: loadbalanced-rhel87-gcc-test-6.0-auth-openssl
    run_on: rhel87-small
    tags: [loadbalanced, rhel87, gcc, auth, openssl]
    depends_on: [{ name: loadbalanced-rhel87-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel87-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: auth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "6.0"
          SSL: openssl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: auth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: openssl
  - name: loadbalanced-rhel87-gcc-test-6.0-noauth-nossl
    run_on: rhel87-small
    tags: [loadbalanced, rhel87, gcc, noauth, nossl]
    depends_on: [{ name: loadbalanced-rhel87-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel87-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: noauth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "6.0"
          SSL: nossl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: noauth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: nossl
  - name: loadbalanced-rhel87-gcc-test-7.0-auth-openssl
    run_on: rhel87-small
    tags: [loadbalanced, rhel87, gcc, auth, openssl]
    depends_on: [{ name: loadbalanced-rhel87-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel87-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: auth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "7.0"
          SSL: openssl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: auth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: openssl
  - name: loadbalanced-rhel87-gcc-test-7.0-noauth-nossl
    run_on: rhel87-small
    tags: [loadbalanced, rhel87, gcc, noauth, nossl]
    depends_on: [{ name: loadbalanced-rhel87-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel87-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: noauth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "7.0"
          SSL: nossl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: noauth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: nossl
  - name: loadbalanced-rhel87-gcc-test-latest-auth-openssl
    run_on: rhel87-small
    tags: [loadbalanced, rhel87, gcc, auth, openssl]
    depends_on: [{ name: loadbalanced-rhel87-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel87-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: auth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: latest
          SSL: openssl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: auth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: openssl
  - name: loadbalanced-rhel87-gcc-test-latest-noauth-nossl
    run_on: rhel87-small
    tags: [loadbalanced, rhel87, gcc, noauth, nossl]
    depends_on: [{ name: loadbalanced-rhel87-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel87-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: noauth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: latest
          SSL: nossl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: noauth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: nossl
  - name: make-docs
    commands:
      - func: make-docs
      - func: upload-docs
      - func: upload-man-pages
  - name: mock-server-test
    run_on: ubuntu2204-small
    commands:
      - func: fetch-det
      - func: run-simple-http-server
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          add_expansions_to_env: true
          args:
            - -c
            - .evergreen/scripts/compile.sh
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          args:
            - -c
            - .evergreen/scripts/run-mock-server-tests.sh
  - name: openssl-static-compile-debian10-gcc
    run_on: debian10-large
    tags: [openssl-static-matrix, debian10, gcc]
    commands:
      - func: openssl-static-compile
        vars:
          CC: gcc
  - name: openssl-static-compile-debian11-gcc
    run_on: debian11-large
    tags: [openssl-static-matrix, debian11, gcc]
    commands:
      - func: openssl-static-compile
        vars:
          CC: gcc
  - name: openssl-static-compile-debian92-gcc
    run_on: debian92-large
    tags: [openssl-static-matrix, debian92, gcc]
    commands:
      - func: openssl-static-compile
        vars:
          CC: gcc
  - name: openssl-static-compile-ubuntu2004-gcc
    run_on: ubuntu2004-large
    tags: [openssl-static-matrix, ubuntu2004, gcc]
    commands:
      - func: openssl-static-compile
        vars:
          CC: gcc
  - name: sasl-cyrus-darwinssl-macos-1100-arm64-clang-compile
    run_on: macos-1100-arm64
    tags: [sasl-matrix-darwinssl, compile, macos-1100-arm64, clang, sasl-cyrus]
    commands:
      - func: sasl-cyrus-darwinssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: sasl-cyrus-darwinssl-macos-1100-clang-compile
    run_on: macos-1100
    tags: [sasl-matrix-darwinssl, compile, macos-1100, clang, sasl-cyrus]
    commands:
      - func: sasl-cyrus-darwinssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: sasl-cyrus-darwinssl-macos-1100-clang-test-3.6-server-auth
    run_on: macos-1100
    tags: [sasl-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, auth, server, "3.6", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "3.6" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-1100-clang-test-4.0-server-auth
    run_on: macos-1100
    tags: [sasl-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, auth, server, "4.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-1100-clang-test-4.2-server-auth
    run_on: macos-1100
    tags: [sasl-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, auth, server, "4.2", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-1100-clang-test-4.4-server-auth
    run_on: macos-1100
    tags: [sasl-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, auth, server, "4.4", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-1100-clang-test-5.0-server-auth
    run_on: macos-1100
    tags: [sasl-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, auth, server, "5.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-1100-clang-test-6.0-server-auth
    run_on: macos-1100
    tags: [sasl-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, auth, server, "6.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-1100-clang-test-7.0-server-auth
    run_on: macos-1100
    tags: [sasl-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, auth, server, "7.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-1100-clang-test-latest-server-auth
    run_on: macos-1100
    tags: [sasl-matrix-darwinssl, test, macos-1100, clang, sasl-cyrus, auth, server, latest, darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-1100-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-1100-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-archlinux-clang-compile
    run_on: archlinux-large
    tags: [sasl-matrix-openssl, compile, archlinux, clang, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: sasl-cyrus-openssl-archlinux-gcc-compile
    run_on: archlinux-large
    tags: [sasl-matrix-openssl, compile, archlinux, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-debian10-gcc-compile
    run_on: debian10-large
    tags: [sasl-matrix-openssl, compile, debian10, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-debian11-gcc-compile
    run_on: debian11-large
    tags: [sasl-matrix-openssl, compile, debian11, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-debian92-clang-compile
    run_on: debian92-large
    tags: [sasl-matrix-openssl, compile, debian92, clang, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: sasl-cyrus-openssl-debian92-gcc-compile
    run_on: debian92-large
    tags: [sasl-matrix-openssl, compile, debian92, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-rhel70-gcc-compile
    run_on: rhel70-large
    tags: [sasl-matrix-openssl, compile, rhel70, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-rhel80-gcc-compile
    run_on: rhel80-large
    tags: [sasl-matrix-openssl, compile, rhel80, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-rhel81-power8-gcc-compile
    run_on: rhel81-power8-large
    tags: [sasl-matrix-openssl, compile, rhel81-power8, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-rhel81-power8-gcc-test-4.2-server-auth
    run_on: rhel81-power8-small
    tags: [sasl-matrix-openssl, test, rhel81-power8, gcc, sasl-cyrus, auth, server, "4.2", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel81-power8-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel81-power8-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel81-power8-gcc-test-4.4-server-auth
    run_on: rhel81-power8-small
    tags: [sasl-matrix-openssl, test, rhel81-power8, gcc, sasl-cyrus, auth, server, "4.4", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel81-power8-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel81-power8-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel81-power8-gcc-test-5.0-server-auth
    run_on: rhel81-power8-small
    tags: [sasl-matrix-openssl, test, rhel81-power8, gcc, sasl-cyrus, auth, server, "5.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel81-power8-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel81-power8-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel81-power8-gcc-test-6.0-server-auth
    run_on: rhel81-power8-small
    tags: [sasl-matrix-openssl, test, rhel81-power8, gcc, sasl-cyrus, auth, server, "6.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel81-power8-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel81-power8-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel81-power8-gcc-test-7.0-server-auth
    run_on: rhel81-power8-small
    tags: [sasl-matrix-openssl, test, rhel81-power8, gcc, sasl-cyrus, auth, server, "7.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel81-power8-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel81-power8-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel81-power8-gcc-test-latest-server-auth
    run_on: rhel81-power8-small
    tags: [sasl-matrix-openssl, test, rhel81-power8, gcc, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel81-power8-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel81-power8-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel83-zseries-gcc-compile
    run_on: rhel83-zseries-large
    tags: [sasl-matrix-openssl, compile, rhel83-zseries, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-rhel83-zseries-gcc-test-5.0-server-auth
    run_on: rhel83-zseries-small
    tags: [sasl-matrix-openssl, test, rhel83-zseries, gcc, sasl-cyrus, auth, server, "5.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel83-zseries-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel83-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel83-zseries-gcc-test-6.0-server-auth
    run_on: rhel83-zseries-small
    tags: [sasl-matrix-openssl, test, rhel83-zseries, gcc, sasl-cyrus, auth, server, "6.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel83-zseries-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel83-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel83-zseries-gcc-test-7.0-server-auth
    run_on: rhel83-zseries-small
    tags: [sasl-matrix-openssl, test, rhel83-zseries, gcc, sasl-cyrus, auth, server, "7.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel83-zseries-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel83-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel83-zseries-gcc-test-latest-server-auth
    run_on: rhel83-zseries-small
    tags: [sasl-matrix-openssl, test, rhel83-zseries, gcc, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel83-zseries-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel83-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1604-arm64-gcc-compile
    run_on: ubuntu1604-arm64-large
    tags: [sasl-matrix-openssl, compile, ubuntu1604-arm64, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu1604-arm64-gcc-test-4.0-server-auth
    run_on: ubuntu1604-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu1604-arm64, gcc, sasl-cyrus, auth, server, "4.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1604-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1604-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1604-clang-compile
    run_on: ubuntu1604-large
    tags: [sasl-matrix-openssl, compile, ubuntu1604, clang, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
    run_on: ubuntu1804-arm64-large
    tags: [sasl-matrix-openssl, compile, ubuntu1804-arm64, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-test-4.2-server-auth
    run_on: ubuntu1804-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu1804-arm64, gcc, sasl-cyrus, auth, server, "4.2", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-test-4.4-server-auth
    run_on: ubuntu1804-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu1804-arm64, gcc, sasl-cyrus, auth, server, "4.4", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-test-5.0-server-auth
    run_on: ubuntu1804-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu1804-arm64, gcc, sasl-cyrus, auth, server, "5.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-test-6.0-server-auth
    run_on: ubuntu1804-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu1804-arm64, gcc, sasl-cyrus, auth, server, "6.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-compile
    run_on: ubuntu1804-large
    tags: [sasl-matrix-openssl, compile, ubuntu1804, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-4.0-replica-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, replica, "4.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-4.0-server-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, server, "4.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-4.2-replica-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, replica, "4.2", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-4.2-server-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, server, "4.2", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-4.4-replica-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, replica, "4.4", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-4.4-server-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, server, "4.4", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-5.0-replica-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, replica, "5.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-5.0-server-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, server, "5.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-6.0-replica-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, replica, "6.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu1804-gcc-test-6.0-server-auth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-openssl, test, ubuntu1804, gcc, sasl-cyrus, auth, server, "6.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
    run_on: ubuntu2004-arm64-large
    tags: [sasl-matrix-openssl, compile, ubuntu2004-arm64, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-7.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, auth, server, "7.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-latest-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-gcc-compile
    run_on: ubuntu2004-large
    tags: [sasl-matrix-openssl, compile, ubuntu2004, gcc, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu2004-gcc-test-7.0-server-auth
    run_on: ubuntu2004-small
    tags: [sasl-matrix-openssl, test, ubuntu2004, gcc, sasl-cyrus, auth, server, "7.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-gcc-test-latest-server-auth
    run_on: ubuntu2004-small
    tags: [sasl-matrix-openssl, test, ubuntu2004, gcc, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-openssl, compile, windows-vsCurrent, vs2017x64, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: Visual Studio 15 2017 Win64
      - func: upload-build
  - name: sasl-cyrus-openssl-windows-2019-vs2017-x64-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-winssl-vs2013-x64-compile
    run_on: windows-64-vs2013-large
    tags: [sasl-matrix-winssl, compile, windows-64-vs2013, vs2013x64, sasl-cyrus]
    commands:
      - func: sasl-cyrus-winssl-compile
        vars:
          CC: Visual Studio 12 2013 Win64
      - func: upload-build
  - name: sasl-cyrus-winssl-vs2015-x64-compile
    run_on: windows-64-vs2015-large
    tags: [sasl-matrix-winssl, compile, windows-64-vs2015, vs2015x64, sasl-cyrus]
    commands:
      - func: sasl-cyrus-winssl-compile
        vars:
          CC: Visual Studio 14 2015 Win64
      - func: upload-build
  - name: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, vs2017x64, sasl-cyrus]
    commands:
      - func: sasl-cyrus-winssl-compile
        vars:
          CC: Visual Studio 15 2017 Win64
      - func: upload-build
  - name: sasl-cyrus-winssl-windows-2019-vs2017-x64-test-3.6-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, "3.6", winssl]
    depends_on: [{ name: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "3.6" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-winssl-windows-2019-vs2017-x64-test-4.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, "4.0", winssl]
    depends_on: [{ name: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-winssl-windows-2019-vs2017-x64-test-4.2-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, "4.2", winssl]
    depends_on: [{ name: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-winssl-windows-2019-vs2017-x64-test-4.4-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, "4.4", winssl]
    depends_on: [{ name: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-winssl-windows-2019-vs2017-x64-test-5.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, "5.0", winssl]
    depends_on: [{ name: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-winssl-windows-2019-vs2017-x64-test-6.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, "6.0", winssl]
    depends_on: [{ name: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-winssl-windows-2019-vs2017-x64-test-7.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, "7.0", winssl]
    depends_on: [{ name: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-winssl-windows-2019-vs2017-x64-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, latest, winssl]
    depends_on: [{ name: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1604-gcc-compile
    run_on: ubuntu1604-large
    tags: [sasl-matrix-nossl, compile, ubuntu1604, gcc, sasl-off]
    commands:
      - func: sasl-off-nossl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-off-nossl-ubuntu1604-gcc-test-3.6-replica-noauth
    run_on: ubuntu1604-small
    tags: [sasl-matrix-nossl, test, ubuntu1604, gcc, sasl-off, noauth, replica, "3.6"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1604-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1604-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "3.6" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1604-gcc-test-3.6-server-noauth
    run_on: ubuntu1604-small
    tags: [sasl-matrix-nossl, test, ubuntu1604, gcc, sasl-off, noauth, server, "3.6"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1604-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1604-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "3.6" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1604-gcc-test-3.6-sharded-noauth
    run_on: ubuntu1604-small
    tags: [sasl-matrix-nossl, test, ubuntu1604, gcc, sasl-off, noauth, sharded, "3.6"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1604-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1604-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "3.6" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-compile
    run_on: ubuntu1804-large
    tags: [sasl-matrix-nossl, compile, ubuntu1804, gcc, sasl-off]
    commands:
      - func: sasl-off-nossl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-off-nossl-ubuntu1804-gcc-test-4.0-replica-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, replica, "4.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-4.0-server-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, server, "4.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-4.0-sharded-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, sharded, "4.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-4.2-replica-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, replica, "4.2"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-4.2-server-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, server, "4.2"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-4.2-sharded-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, sharded, "4.2"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-4.4-replica-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, replica, "4.4"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-4.4-server-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, server, "4.4"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-4.4-sharded-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, sharded, "4.4"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-5.0-replica-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, replica, "5.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-5.0-server-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, server, "5.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-5.0-sharded-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, sharded, "5.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-6.0-replica-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, replica, "6.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-6.0-server-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, server, "6.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu1804-gcc-test-6.0-sharded-noauth
    run_on: ubuntu1804-small
    tags: [sasl-matrix-nossl, test, ubuntu1804, gcc, sasl-off, noauth, sharded, "6.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu1804-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu1804-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu2004-gcc-compile
    run_on: ubuntu2004-large
    tags: [sasl-matrix-nossl, compile, ubuntu2004, gcc, sasl-off]
    commands:
      - func: sasl-off-nossl-compile
        vars:
          CC: gcc
      - func: upload-build
  - name: sasl-off-nossl-ubuntu2004-gcc-test-7.0-replica-noauth
    run_on: ubuntu2004-small
    tags: [sasl-matrix-nossl, test, ubuntu2004, gcc, sasl-off, noauth, replica, "7.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu2004-gcc-test-7.0-server-noauth
    run_on: ubuntu2004-small
    tags: [sasl-matrix-nossl, test, ubuntu2004, gcc, sasl-off, noauth, server, "7.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu2004-gcc-test-7.0-sharded-noauth
    run_on: ubuntu2004-small
    tags: [sasl-matrix-nossl, test, ubuntu2004, gcc, sasl-off, noauth, sharded, "7.0"]
    depends_on: [{ name: sasl-off-nossl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu2004-gcc-test-latest-replica-noauth
    run_on: ubuntu2004-small
    tags: [sasl-matrix-nossl, test, ubuntu2004, gcc, sasl-off, noauth, replica, latest]
    depends_on: [{ name: sasl-off-nossl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu2004-gcc-test-latest-server-noauth
    run_on: ubuntu2004-small
    tags: [sasl-matrix-nossl, test, ubuntu2004, gcc, sasl-off, noauth, server, latest]
    depends_on: [{ name: sasl-off-nossl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu2004-gcc-test-latest-sharded-noauth
    run_on: ubuntu2004-small
    tags: [sasl-matrix-nossl, test, ubuntu2004, gcc, sasl-off, noauth, sharded, latest]
    depends_on: [{ name: sasl-off-nossl-ubuntu2004-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-ubuntu2004-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-nossl, compile, windows-vsCurrent, vs2017x64, sasl-off]
    commands:
      - func: sasl-off-nossl-compile
        vars:
          CC: Visual Studio 15 2017 Win64
      - func: upload-build
  - name: sasl-off-winssl-vs2013-x86-compile
    run_on: windows-64-vs2013-large
    tags: [sasl-matrix-winssl, compile, windows-64-vs2013, vs2013x86, sasl-off]
    commands:
      - func: sasl-off-winssl-compile
        vars:
          CC: Visual Studio 12 2013
      - func: upload-build
  - name: sasl-off-winssl-vs2015-x86-compile
    run_on: windows-64-vs2015-large
    tags: [sasl-matrix-winssl, compile, windows-64-vs2015, vs2015x86, sasl-off]
    commands:
      - func: sasl-off-winssl-compile
        vars:
          CC: Visual Studio 14 2015
      - func: upload-build
  - name: sasl-off-winssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, vs2017x64, sasl-off]
    commands:
      - func: sasl-off-winssl-compile
        vars:
          CC: Visual Studio 15 2017 Win64
      - func: upload-build
  - name: sasl-off-winssl-windows-2019-vs2017-x86-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, vs2017x86, sasl-off]
    commands:
      - func: sasl-off-winssl-compile
        vars:
          CC: Visual Studio 15 2017
      - func: upload-build
  - name: sasl-sspi-winssl-windows-2019-mingw-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, mingw, sasl-sspi]
    commands:
      - func: sasl-sspi-winssl-compile
        vars:
          CC: mingw
      - func: upload-build
  - name: sasl-sspi-winssl-windows-2019-mingw-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, mingw, sasl-sspi, auth, server, latest, winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-mingw-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-mingw-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: mingw }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, vs2017x64, sasl-sspi]
    commands:
      - func: sasl-sspi-winssl-compile
        vars:
          CC: Visual Studio 15 2017 Win64
      - func: upload-build
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-sspi, auth, server, latest, winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 Win64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x86-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, vs2017x86, sasl-sspi]
    commands:
      - func: sasl-sspi-winssl-compile
        vars:
          CC: Visual Studio 15 2017
      - func: upload-build
  - name: sasl-sspi-winssl-windows-2019-vs2017-x86-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x86, sasl-sspi, auth, server, latest, winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x86-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x86-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: Visual Studio 15 2017 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: scan-build-macos-1100-clang
    run_on: macos-1100
    tags: [scan-build-matrix, macos-1100, clang]
    commands:
      - func: scan-build
        vars:
          CC: clang
      - func: upload scan artifacts
  - name: scan-build-ubuntu1604-arm64-clang
    run_on: ubuntu1604-arm64-large
    tags: [scan-build-matrix, ubuntu1604-arm64, clang]
    commands:
      - func: scan-build
        vars:
          CC: clang
      - func: upload scan artifacts
  - name: scan-build-ubuntu1604-clang
    run_on: ubuntu1604-large
    tags: [scan-build-matrix, ubuntu1604, clang]
    commands:
      - func: scan-build
        vars:
          CC: clang
      - func: upload scan artifacts
  - name: scan-build-ubuntu1604-clang-i686
    run_on: ubuntu1604-large
    tags: [scan-build-matrix, ubuntu1604, clang, i686]
    commands:
      - func: scan-build
        vars:
          CC: clang
          MARCH: i686
      - func: upload scan artifacts
  - name: scan-build-ubuntu1804-arm64-clang
    run_on: ubuntu1804-arm64-large
    tags: [scan-build-matrix, ubuntu1804-arm64, clang]
    commands:
      - func: scan-build
        vars:
          CC: clang
      - func: upload scan artifacts
  - name: scan-build-ubuntu1804-clang-i686
    run_on: ubuntu1804-large
    tags: [scan-build-matrix, ubuntu1804, clang, i686]
    commands:
      - func: scan-build
        vars:
          CC: clang
          MARCH: i686
      - func: upload scan artifacts
  - name: std-c11-archlinux-clang-compile
    run_on: archlinux-large
    tags: [std-matrix, archlinux, clang, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: clang
          C_STD_VERSION: 11
  - name: std-c11-debian10-clang-compile
    run_on: debian10-large
    tags: [std-matrix, debian10, clang, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: clang
          C_STD_VERSION: 11
  - name: std-c11-debian10-gcc-compile
    run_on: debian10-large
    tags: [std-matrix, debian10, gcc, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: gcc
          C_STD_VERSION: 11
  - name: std-c11-debian11-clang-compile
    run_on: debian11-large
    tags: [std-matrix, debian11, clang, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: clang
          C_STD_VERSION: 11
  - name: std-c11-debian11-gcc-compile
    run_on: debian11-large
    tags: [std-matrix, debian11, gcc, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: gcc
          C_STD_VERSION: 11
  - name: std-c11-debian92-clang-compile
    run_on: debian92-large
    tags: [std-matrix, debian92, clang, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: clang
          C_STD_VERSION: 11
  - name: std-c11-ubuntu1604-clang-compile
    run_on: ubuntu1604-large
    tags: [std-matrix, ubuntu1604, clang, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: clang
          C_STD_VERSION: 11
  - name: std-c11-ubuntu1604-clang-i686-compile
    run_on: ubuntu1604-large
    tags: [std-matrix, ubuntu1604, clang, compile, i686, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: clang
          C_STD_VERSION: 11
          MARCH: i686
  - name: std-c11-ubuntu1804-clang-i686-compile
    run_on: ubuntu1804-large
    tags: [std-matrix, ubuntu1804, clang, compile, i686, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: clang
          C_STD_VERSION: 11
          MARCH: i686
  - name: std-c11-ubuntu1804-gcc-compile
    run_on: ubuntu1804-large
    tags: [std-matrix, ubuntu1804, gcc, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: gcc
          C_STD_VERSION: 11
  - name: std-c11-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, clang, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: clang
          C_STD_VERSION: 11
  - name: std-c11-ubuntu2004-gcc-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, gcc, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: gcc
          C_STD_VERSION: 11
  - name: std-c11-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2017x64, compile, std-c11]
    commands:
      - func: std-compile
        vars:
          CC: Visual Studio 15 2017 Win64
          C_STD_VERSION: 11
  - name: std-c17-debian10-gcc-compile
    run_on: debian10-large
    tags: [std-matrix, debian10, gcc, compile, std-c17]
    commands:
      - func: std-compile
        vars:
          CC: gcc
          C_STD_VERSION: 17
  - name: std-c17-debian11-gcc-compile
    run_on: debian11-large
    tags: [std-matrix, debian11, gcc, compile, std-c17]
    commands:
      - func: std-compile
        vars:
          CC: gcc
          C_STD_VERSION: 17
  - name: std-c17-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2017x64, compile, std-c17]
    commands:
      - func: std-compile
        vars:
          CC: Visual Studio 15 2017 Win64
          C_STD_VERSION: 17
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
    run_on: ubuntu1804-large
    tags: [sanitizers-matrix-tsan, compile, ubuntu1804, clang, tsan, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.0-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, replica, "4.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.0-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, server, "4.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.0-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, sharded, "4.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.2-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, replica, "4.2", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.2-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, server, "4.2", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.2-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, sharded, "4.2", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.4-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, replica, "4.4", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.4-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, server, "4.4", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-4.4-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, sharded, "4.4", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-5.0-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, replica, "5.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-5.0-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, server, "5.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-5.0-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, sharded, "5.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-6.0-replica-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, replica, "6.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-6.0-server-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, server, "6.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-test-6.0-sharded-auth
    run_on: ubuntu1804-small
    tags: [sanitizers-matrix-tsan, test, ubuntu1804, clang, sasl-cyrus, tsan, auth, sharded, "6.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu1804-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [sanitizers-matrix-tsan, compile, ubuntu2004, clang, tsan, sasl-cyrus]
    commands:
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
      - func: upload-build
  - name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-replica-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-tsan, test, ubuntu2004, clang, sasl-cyrus, tsan, auth, replica, "7.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-server-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-tsan, test, ubuntu2004, clang, sasl-cyrus, tsan, auth, server, "7.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-test-7.0-sharded-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-tsan, test, ubuntu2004, clang, sasl-cyrus, tsan, auth, sharded, "7.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-replica-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-tsan, test, ubuntu2004, clang, sasl-cyrus, tsan, auth, replica, latest, openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-server-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-tsan, test, ubuntu2004, clang, sasl-cyrus, tsan, auth, server, latest, openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-test-latest-sharded-auth
    run_on: ubuntu2004-small
    tags: [sanitizers-matrix-tsan, test, ubuntu2004, clang, sasl-cyrus, tsan, auth, sharded, latest, openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-ubuntu2004-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
