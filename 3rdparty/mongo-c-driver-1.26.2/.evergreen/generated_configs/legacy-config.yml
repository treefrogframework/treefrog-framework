####################################
# Evergreen configuration
#
# Generated with evergreen_config_generator from
# github.com/mongodb-labs/drivers-evergreen-tools
#
# DO NOT EDIT THIS FILE
#
####################################
functions:
  install ssl:
  - command: shell.exec
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        bash .evergreen/scripts/install-ssl.sh
  upload coverage:
  - command: shell.exec
    params:
      silent: true
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export AWS_ACCESS_KEY_ID=${aws_key}
        export AWS_SECRET_ACCESS_KEY=${aws_secret}
        aws s3 cp coverage s3://mciuploads/${project}/${build_variant}/${revision}/${version_id}/${build_id}/coverage/ --recursive --acl public-read --region us-east-1
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${version_id}/${build_id}/coverage/index.html
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/coverage/index.html
      content_type: text/html
      display_name: Coverage Report
  upload scan artifacts:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        if find scan -name \*.html | grep -q html; then
          (cd scan && find . -name index.html -exec echo "<li><a href='{}'>{}</a></li>" \;) >> scan.html
        else
          echo "No issues found" > scan.html
        fi
  - command: shell.exec
    params:
      silent: true
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export AWS_ACCESS_KEY_ID=${aws_key}
        export AWS_SECRET_ACCESS_KEY=${aws_secret}
        aws s3 cp scan s3://mciuploads/${project}/${build_variant}/${revision}/${version_id}/${build_id}/scan/ --recursive --acl public-read --region us-east-1
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${build_variant}/${revision}/${version_id}/${build_id}/scan/index.html
      bucket: mciuploads
      permissions: public-read
      local_file: mongoc/scan.html
      content_type: text/html
      display_name: Scan Build Report
  run auth tests:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        bash .evergreen/scripts/run-auth-tests.sh
  link sample program:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - distro_id
      shell: bash
      script: |-
        set -o errexit
        # Compile a program that links dynamically or statically to libmongoc,
        # using variables from pkg-config or CMake's find_package command.
        export BUILD_SAMPLE_WITH_CMAKE=${BUILD_SAMPLE_WITH_CMAKE}
        export BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=${BUILD_SAMPLE_WITH_CMAKE_DEPRECATED}
        export ENABLE_SSL=${ENABLE_SSL}
        export ENABLE_SNAPPY=${ENABLE_SNAPPY}
        LINK_STATIC=  bash .evergreen/scripts/link-sample-program.sh
        LINK_STATIC=1 bash .evergreen/scripts/link-sample-program.sh
  link sample program bson:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - distro_id
      shell: bash
      script: |-
        set -o errexit
        # Compile a program that links dynamically or statically to libbson,
        # using variables from pkg-config or from CMake's find_package command.
        BUILD_SAMPLE_WITH_CMAKE=  BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=  LINK_STATIC=  bash .evergreen/scripts/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=  BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=  LINK_STATIC=1 bash .evergreen/scripts/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=1 BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=  LINK_STATIC=  bash .evergreen/scripts/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=1 BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=  LINK_STATIC=1 bash .evergreen/scripts/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=1 BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=1 LINK_STATIC=  bash .evergreen/scripts/link-sample-program-bson.sh
        BUILD_SAMPLE_WITH_CMAKE=1 BUILD_SAMPLE_WITH_CMAKE_DEPRECATED=1 LINK_STATIC=1 bash .evergreen/scripts/link-sample-program-bson.sh
  link sample program MSVC:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - distro_id
      shell: bash
      script: |-
        set -o errexit
        # Build libmongoc with CMake and compile a program that links
        # dynamically or statically to it, using variables from CMake's
        # find_package command.
        export ENABLE_SSL=${ENABLE_SSL}
        export ENABLE_SNAPPY=${ENABLE_SNAPPY}
        . .evergreen/scripts/use-tools.sh paths
        . .evergreen/scripts/find-cmake-latest.sh
        export CMAKE="$(native-path "$(find_cmake_latest)")"
        LINK_STATIC=  cmd.exe /c .\\.evergreen\\scripts\\link-sample-program-msvc.cmd
        LINK_STATIC=1 cmd.exe /c .\\.evergreen\\scripts\\link-sample-program-msvc.cmd
  link sample program mingw:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - distro_id
      shell: bash
      script: |-
        set -o errexit
        # Build libmongoc with CMake and compile a program that links
        # dynamically to it, using variables from pkg-config.exe.
        . .evergreen/scripts/use-tools.sh paths
        . .evergreen/scripts/find-cmake-latest.sh
        export CMAKE="$(native-path "$(find_cmake_latest)")"
        cmd.exe /c .\\.evergreen\\scripts\\link-sample-program-mingw.cmd
  link sample program MSVC bson:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - distro_id
      shell: bash
      script: |-
        set -o errexit
        # Build libmongoc with CMake and compile a program that links
        # dynamically or statically to it, using variables from CMake's
        # find_package command.
        export ENABLE_SSL=${ENABLE_SSL}
        export ENABLE_SNAPPY=${ENABLE_SNAPPY}
        . .evergreen/scripts/use-tools.sh paths
        . .evergreen/scripts/find-cmake-latest.sh
        export CMAKE="$(native-path "$(find_cmake_latest)")"
        LINK_STATIC=  cmd.exe /c .\\.evergreen\\scripts\\link-sample-program-msvc-bson.cmd
        LINK_STATIC=1 cmd.exe /c .\\.evergreen\\scripts\\link-sample-program-msvc-bson.cmd
  link sample program mingw bson:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Build libmongoc with CMake and compile a program that links
        # dynamically to it, using variables from pkg-config.exe.
        . .evergreen/scripts/use-tools.sh paths
        . .evergreen/scripts/find-cmake-latest.sh
        export CMAKE="$(native-path "$(find_cmake_latest)")"
        cmd.exe /c .\\.evergreen\\scripts\\link-sample-program-mingw-bson.cmd
  update codecov.io:
  - command: shell.exec
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        # Note: coverage is currently only enabled on the ubuntu1804 distro.
        # This script does not support MacOS, Windows, or non-x86_64 distros.
        # Update accordingly if code coverage is expanded to other distros.
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        # -Z: Exit with a non-zero value if error.
        # -g: Run with gcov support.
        # -t: Codecov upload token.
        # perl: filter verbose "Found" list and "Processing" messages.
        ./codecov -Zgt "${codecov_token}" | perl -lne 'print if not m|^.*\.gcov(\.\.\.)?$|'
  compile coverage:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        COVERAGE=ON DEBUG=ON bash .evergreen/scripts/compile.sh
  build mongohouse:
  - command: shell.exec
    type: test
    params:
      shell: bash
      script: |-
        set -o errexit
        cd drivers-evergreen-tools
        export DRIVERS_TOOLS=$(pwd)
        bash .evergreen/atlas_data_lake/pull-mongohouse-image.sh
  run mongohouse:
  - command: shell.exec
    type: test
    params:
      shell: bash
      script: |-
        set -o errexit
        cd drivers-evergreen-tools
        export DRIVERS_TOOLS=$(pwd)
        bash .evergreen/atlas_data_lake/run-mongohouse-image.sh
  test mongohouse:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        echo "Waiting for mongohouse to start..."
        wait_for_mongohouse() {
            for _ in $(seq 300); do
                # Exit code 7: "Failed to connect to host".
                if curl -s localhost:$1; (("$?" != 7)); then
                    return 0
                else
                    sleep 1
                fi
            done
            echo "Could not detect mongohouse on port $1" 1>&2
            return 1
        }
        wait_for_mongohouse 27017 || exit
        echo "Waiting for mongohouse to start... done."
        pgrep -a "mongohouse"
        export RUN_MONGOHOUSE_TESTS=ON
        ./src/libmongoc/test-libmongoc --no-fork -l /mongohouse/* -d --skip-tests .evergreen/etc/skip-tests.txt
  run aws tests:
  - command: ec2.assume_role
    params:
      role_arn: ${aws_test_secrets_role}
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      shell: bash
      script: |-
        set -o errexit
        pushd ../drivers-evergreen-tools/.evergreen/auth_aws
        ./setup_secrets.sh drivers/aws_auth
        popd # ../drivers-evergreen-tools/.evergreen/auth_aws
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - TESTCASE
      shell: bash
      script: |-
        set -o errexit
        pushd ../drivers-evergreen-tools/.evergreen/auth_aws
        . ./activate-authawsvenv.sh
        popd # ../drivers-evergreen-tools/.evergreen/auth_aws
        bash .evergreen/scripts/run-aws-tests.sh
tasks:
- name: hardened-compile
  tags:
  - hardened
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS="-fno-strict-overflow -D_FORTIFY_SOURCE=2 -fstack-protector-all -fPIE -O" DEBUG="ON" LDFLAGS="-pie -Wl,-z,relro -Wl,-z,now" SNAPPY="OFF" ZLIB="OFF" ZSTD="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-compression-zlib
  tags:
  - compression
  - zlib
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SNAPPY="OFF" ZLIB="BUNDLED" ZSTD="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-compression-snappy
  tags:
  - compression
  - snappy
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SNAPPY="ON" ZLIB="OFF" ZSTD="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-compression-zstd
  tags:
  - compression
  - zstd
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SNAPPY="OFF" ZLIB="OFF" ZSTD="ON" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-compression
  tags:
  - compression
  - snappy
  - zlib
  - zstd
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SNAPPY="ON" ZLIB="BUNDLED" ZSTD="ON" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-no-align
  tags:
  - debug-compile
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=OFF" SNAPPY="OFF" ZLIB="BUNDLED" ZSTD="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-nosasl-nossl
  tags:
  - debug-compile
  - nosasl
  - nossl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SSL="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-lto
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS="-flto" DEBUG="ON" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-lto-thin
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS="-flto=thin" DEBUG="ON" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-no-counters
  tags:
  - debug-compile
  - no-counters
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" ENABLE_SHM_COUNTERS="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-asan-clang
  tags:
  - asan-clang
  - debug-compile
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS="-fno-omit-frame-pointer" CHECK_LOG="ON" DEBUG="ON" EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=OFF" SANITIZE="address" SNAPPY="OFF" ZLIB="BUNDLED" ZSTD="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-asan-clang-openssl
  tags:
  - asan-clang
  - debug-compile
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS="-fno-omit-frame-pointer" CHECK_LOG="ON" DEBUG="ON" EXTRA_CONFIGURE_FLAGS="-DENABLE_EXTRA_ALIGNMENT=OFF" SANITIZE="address" SNAPPY="OFF" SSL="OPENSSL" ZLIB="BUNDLED" ZSTD="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: compile-tracing
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS="-Werror -Wno-cast-align" DEBUG="ON" TRACING="ON" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: release-compile
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env RELEASE="ON" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-nosasl-openssl
  tags:
  - debug-compile
  - nosasl
  - openssl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SSL="OPENSSL" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-nosasl-openssl-static
  tags:
  - debug-compile
  - nosasl
  - openssl-static
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SSL="OPENSSL_STATIC" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-nosasl-darwinssl
  tags:
  - darwinssl
  - debug-compile
  - nosasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SSL="DARWIN" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-nosasl-winssl
  tags:
  - debug-compile
  - nosasl
  - winssl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SSL="WINDOWS" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-sasl-nossl
  tags:
  - debug-compile
  - nossl
  - sasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SASL="AUTO" SSL="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-sasl-openssl
  tags:
  - debug-compile
  - openssl
  - sasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SASL="AUTO" SSL="OPENSSL" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-sasl-openssl-static
  tags:
  - debug-compile
  - openssl-static
  - sasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SASL="AUTO" SSL="OPENSSL_STATIC" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-sasl-darwinssl
  tags:
  - darwinssl
  - debug-compile
  - sasl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SASL="AUTO" SSL="DARWIN" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-sspi-nossl
  tags:
  - debug-compile
  - nossl
  - sspi
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SASL="SSPI" SSL="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-sspi-openssl
  tags:
  - debug-compile
  - openssl
  - sspi
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SASL="SSPI" SSL="OPENSSL" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-sspi-openssl-static
  tags:
  - debug-compile
  - openssl-static
  - sspi
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SASL="SSPI" SSL="OPENSSL_STATIC" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-rdtscp
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" ENABLE_RDTSCP="ON" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-sspi-winssl
  tags:
  - debug-compile
  - sspi
  - winssl
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SASL="SSPI" SSL="WINDOWS" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-nosrv
  tags:
  - debug-compile
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG="ON" SRV="OFF" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: link-with-cmake
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
- name: link-with-cmake-ssl
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      ENABLE_SSL: 1
- name: link-with-cmake-snappy
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      ENABLE_SNAPPY: 'ON'
- name: link-with-cmake-mac
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
- name: link-with-cmake-deprecated
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      BUILD_SAMPLE_WITH_CMAKE_DEPRECATED: 1
- name: link-with-cmake-ssl-deprecated
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      BUILD_SAMPLE_WITH_CMAKE_DEPRECATED: 1
      ENABLE_SSL: 1
- name: link-with-cmake-snappy-deprecated
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      BUILD_SAMPLE_WITH_CMAKE_DEPRECATED: 1
      ENABLE_SNAPPY: 'ON'
- name: link-with-cmake-mac-deprecated
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
    vars:
      BUILD_SAMPLE_WITH_CMAKE: 1
      BUILD_SAMPLE_WITH_CMAKE_DEPRECATED: 1
- name: link-with-cmake-windows
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program MSVC
- name: link-with-cmake-windows-ssl
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      SSL: openssl
  - func: link sample program MSVC
    vars:
      ENABLE_SSL: 1
- name: link-with-cmake-windows-snappy
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program MSVC
    vars:
      ENABLE_SNAPPY: 'ON'
- name: link-with-cmake-mingw
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program mingw
- name: link-with-pkg-config
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
- name: link-with-pkg-config-mac
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
- name: link-with-pkg-config-ssl
  commands:
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
  - func: link sample program
    vars:
      ENABLE_SSL: 1
- name: link-with-bson
  commands:
  - func: link sample program bson
- name: link-with-bson-mac
  commands:
  - func: link sample program bson
- name: link-with-bson-windows
  commands:
  - func: link sample program MSVC bson
- name: link-with-bson-mingw
  commands:
  - func: link sample program mingw bson
- name: debian-package-build
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export IS_PATCH="${is_patch}"
        sh .evergreen/scripts/debian_package_build.sh
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/mongo-c-driver-debian-packages-${CURRENT_VERSION}.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: deb.tar.gz
      content_type: ${content_type|application/x-gzip}
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/mongo-c-driver-debian-packages.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: deb.tar.gz
      content_type: ${content_type|application/x-gzip}
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/mongo-c-driver-debian-packages-i386-${CURRENT_VERSION}.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: deb-i386.tar.gz
      content_type: ${content_type|application/x-gzip}
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/mongo-c-driver-debian-packages-i386.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: deb-i386.tar.gz
      content_type: ${content_type|application/x-gzip}
- name: rpm-package-build
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export IS_PATCH="${is_patch}"
        sh .evergreen/scripts/check_rpm_spec.sh
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        sh .evergreen/scripts/build_snapshot_rpm.sh
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/mongo-c-driver-rpm-packages-${CURRENT_VERSION}.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: rpm.tar.gz
      content_type: ${content_type|application/x-gzip}
  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: ${project}/${branch_name}/${revision}/${version_id}/${build_id}/${execution}/mongo-c-driver-rpm-packages.tar.gz
      bucket: mciuploads
      permissions: public-read
      local_file: rpm.tar.gz
      content_type: ${content_type|application/x-gzip}
- name: install-uninstall-check-mingw
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - distro_id
      shell: bash
      script: |-
        set -o errexit
        . .evergreen/scripts/find-cmake-latest.sh
        export CMAKE="$(find_cmake_latest)"
        export CC="C:/mingw-w64/x86_64-4.9.1-posix-seh-rt_v3-rev1/mingw64/bin/gcc.exe"
        BSON_ONLY=1 cmd.exe /c .\\.evergreen\\scripts\\install-uninstall-check-windows.cmd
        cmd.exe /c .\\.evergreen\\scripts\\install-uninstall-check-windows.cmd
- name: install-uninstall-check-msvc
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - distro_id
      shell: bash
      script: |-
        set -o errexit
        . .evergreen/scripts/find-cmake-latest.sh
        export CMAKE="$(find_cmake_latest)"
        export CC="Visual Studio 14 2015 Win64"
        BSON_ONLY=1 cmd.exe /c .\\.evergreen\\scripts\\install-uninstall-check-windows.cmd
        cmd.exe /c .\\.evergreen\\scripts\\install-uninstall-check-windows.cmd
- name: install-uninstall-check
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      include_expansions_in_env:
      - distro_id
      shell: bash
      script: |-
        set -o errexit
        . .evergreen/scripts/find-cmake-latest.sh
        export CMAKE="$(find_cmake_latest)"
        DESTDIR="$(pwd)/dest" bash ./.evergreen/scripts/install-uninstall-check.sh
        BSON_ONLY=1 bash ./.evergreen/scripts/install-uninstall-check.sh
        bash ./.evergreen/scripts/install-uninstall-check.sh
- name: debug-compile-with-warnings
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS="-Werror -Wno-cast-align" DEBUG="ON" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-sasl-openssl-static-cse
  tags:
  - client-side-encryption
  - debug-compile
  - openssl-static
  - sasl
  - special
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env COMPILE_LIBMONGOCRYPT="ON" DEBUG="ON" EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON" SASL="AUTO" SSL="OPENSSL_STATIC" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.0.1u
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS="-Wno-redundant-decls" DEBUG="ON" SASL="OFF" SSL="OPENSSL" bash .evergreen/scripts/compile.sh
  - func: upload-build
- name: build-and-test-with-toolchain
  commands:
  - command: s3.get
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      remote_file: mongo-c-toolchain/${distro_id}/2023/06/07/mongo-c-toolchain.tar.gz
      bucket: mongo-c-toolchain
      local_file: mongo-c-toolchain.tar.gz
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        bash ./.evergreen/scripts/build-and-test-with-toolchain.sh
- name: install-libmongoc-after-libbson
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        bash ./.evergreen/scripts/install-libmongoc-after-libbson.sh
- name: test-coverage-latest-replica-set-auth-sasl-openssl
  tags:
  - latest
  - test-coverage
  commands:
  - func: compile coverage
    vars:
      SASL: AUTO
      SSL: OPENSSL
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: latest
      SSL: openssl
      TOPOLOGY: replica_set
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: auth
      COVERAGE: 'ON'
      SSL: openssl
  - func: upload coverage
  - func: update codecov.io
- name: test-coverage-latest-replica-set-auth-sasl-openssl-cse
  tags:
  - client-side-encryption
  - latest
  - test-coverage
  commands:
  - func: compile coverage
    vars:
      COMPILE_LIBMONGOCRYPT: 'ON'
      EXTRA_CONFIGURE_FLAGS: EXTRA_CONFIGURE_FLAGS="-DENABLE_PIC=ON"
      SASL: AUTO
      SSL: OPENSSL
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: latest
      SSL: openssl
      TOPOLOGY: replica_set
  - func: run-simple-http-server
  - func: run-mock-kms-servers
  - func: run-tests
    vars:
      AUTH: auth
      CLIENT_SIDE_ENCRYPTION: 'ON'
      COVERAGE: 'ON'
      SSL: openssl
  - func: upload coverage
  - func: update codecov.io
- name: test-dns-openssl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      SSL: ssl
      TOPOLOGY: replica_set
  - func: run-tests
    vars:
      AUTH: noauth
      DNS: 'on'
      SSL: ssl
- name: test-dns-winssl
  depends_on:
    name: debug-compile-sspi-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sspi-winssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      SSL: ssl
      TOPOLOGY: replica_set
  - func: run-tests
    vars:
      AUTH: noauth
      DNS: 'on'
      SSL: ssl
- name: test-dns-darwinssl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      SSL: ssl
      TOPOLOGY: replica_set
  - func: run-tests
    vars:
      AUTH: noauth
      DNS: 'on'
      SSL: ssl
- name: test-dns-loadbalanced-openssl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      LOAD_BALANCER: 'on'
      SSL: ssl
      TOPOLOGY: sharded_cluster
  - func: fetch-det
  - func: start-load-balancer
    vars:
      MONGODB_URI: mongodb://localhost:27017,localhost:27018
  - func: run-tests
    vars:
      AUTH: noauth
      DNS: loadbalanced
      SSL: ssl
- name: test-dns-auth-openssl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      SSL: ssl
      TOPOLOGY: replica_set
      AUTHSOURCE: thisDB
  - func: run-tests
    vars:
      AUTH: auth
      DNS: dns-auth
      SSL: ssl
- name: test-dns-auth-winssl
  depends_on:
    name: debug-compile-sspi-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sspi-winssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      SSL: ssl
      TOPOLOGY: replica_set
      AUTHSOURCE: thisDB
  - func: run-tests
    vars:
      AUTH: auth
      DNS: dns-auth
      SSL: ssl
- name: test-dns-auth-darwinssl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      SSL: ssl
      TOPOLOGY: replica_set
      AUTHSOURCE: thisDB
  - func: run-tests
    vars:
      AUTH: auth
      DNS: dns-auth
      SSL: ssl
- name: test-latest-server-compression-zlib
  tags:
  - compression
  - latest
  - zlib
  depends_on:
    name: debug-compile-compression-zlib
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-compression-zlib
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      ORCHESTRATION_FILE: zlib
      SSL: nossl
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: noauth
      COMPRESSORS: zlib
      SSL: nossl
- name: test-latest-server-compression-snappy
  tags:
  - compression
  - latest
  - snappy
  depends_on:
    name: debug-compile-compression-snappy
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-compression-snappy
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      ORCHESTRATION_FILE: snappy
      SSL: nossl
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: noauth
      COMPRESSORS: snappy
      SSL: nossl
- name: test-latest-server-compression-zstd
  tags:
  - compression
  - latest
  - zstd
  depends_on:
    name: debug-compile-compression-zstd
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-compression-zstd
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      ORCHESTRATION_FILE: zstd
      SSL: nossl
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: noauth
      COMPRESSORS: zstd
      SSL: nossl
- name: test-latest-server-compression
  tags:
  - compression
  - latest
  - snappy
  - zlib
  - zstd
  depends_on:
    name: debug-compile-compression
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-compression
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      ORCHESTRATION_FILE: snappy-zlib-zstd
      SSL: nossl
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: noauth
      COMPRESSORS: snappy,zlib,zstd
      SSL: nossl
- name: retry-true-latest-server
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      TOPOLOGY: server
  - func: run-simple-http-server
  - func: run-tests
    vars:
      URI: mongodb://localhost/?retryWrites=true
- name: test-latest-server-hardened
  tags:
  - hardened
  - latest
  depends_on:
    name: hardened-compile
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: hardened-compile
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      TOPOLOGY: server
  - func: run-simple-http-server
  - func: run-tests
    vars:
      URI: null
- name: authentication-tests-openssl
  tags:
  - authentication-tests
  - openssl
  - sasl
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: prepare-kerberos
  - func: run auth tests
- name: authentication-tests-darwinssl
  tags:
  - authentication-tests
  - darwinssl
  - sasl
  depends_on:
    name: debug-compile-sasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sasl-darwinssl
  - func: prepare-kerberos
  - func: run auth tests
- name: authentication-tests-winssl
  tags:
  - authentication-tests
  - sspi
  - winssl
  depends_on:
    name: debug-compile-sspi-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sspi-winssl
  - func: prepare-kerberos
  - func: run auth tests
- name: authentication-tests-openssl-nosasl
  tags:
  - authentication-tests
  - nosasl
  - openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: prepare-kerberos
  - func: run auth tests
- name: test-mongohouse
  depends_on:
    name: debug-compile-sasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-sasl-openssl
  - func: fetch-det
  - func: build mongohouse
  - func: run mongohouse
  - func: test mongohouse
- name: authentication-tests-asan-memcheck
  tags:
  - asan
  - authentication-tests
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env SANITIZE=address DEBUG=ON SASL=AUTO SSL=OPENSSL EXTRA_CONFIGURE_FLAGS='-DENABLE_EXTRA_ALIGNMENT=OFF' bash .evergreen/scripts/compile.sh
  - func: prepare-kerberos
  - func: run auth tests
    vars:
      ASAN: 'on'
- name: test-versioned-api-7.0
  tags:
  - '7.0'
  - versioned-api
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '7.0'
      REQUIRE_API_VERSION: 'true'
      SSL: ssl
      TOPOLOGY: server
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: auth
      MONGODB_API_VERSION: 1
      SSL: ssl
- name: test-versioned-api-accept-version-two-7.0
  tags:
  - '7.0'
  - versioned-api
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      MONGODB_VERSION: '7.0'
      ORCHESTRATION_FILE: versioned-api-testing
      SSL: nossl
      TOPOLOGY: server
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: noauth
      MONGODB_API_VERSION: 1
      SSL: nossl
- name: test-versioned-api-6.0
  tags:
  - '6.0'
  - versioned-api
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '6.0'
      REQUIRE_API_VERSION: 'true'
      SSL: ssl
      TOPOLOGY: server
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: auth
      MONGODB_API_VERSION: 1
      SSL: ssl
- name: test-versioned-api-accept-version-two-6.0
  tags:
  - '6.0'
  - versioned-api
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      MONGODB_VERSION: '6.0'
      ORCHESTRATION_FILE: versioned-api-testing
      SSL: nossl
      TOPOLOGY: server
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: noauth
      MONGODB_API_VERSION: 1
      SSL: nossl
- name: test-versioned-api-5.0
  tags:
  - '5.0'
  - versioned-api
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '5.0'
      REQUIRE_API_VERSION: 'true'
      SSL: ssl
      TOPOLOGY: server
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: auth
      MONGODB_API_VERSION: 1
      SSL: ssl
- name: test-versioned-api-accept-version-two-5.0
  tags:
  - '5.0'
  - versioned-api
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: noauth
      MONGODB_VERSION: '5.0'
      ORCHESTRATION_FILE: versioned-api-testing
      SSL: nossl
      TOPOLOGY: server
  - func: run-simple-http-server
  - func: run-tests
    vars:
      AUTH: noauth
      MONGODB_API_VERSION: 1
      SSL: nossl
- name: build-and-run-authentication-tests-openssl-1.0.1
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.0.1u
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS=-Wno-redundant-decls DEBUG=ON SASL=OFF SSL=OPENSSL bash .evergreen/scripts/compile.sh
  - func: run auth tests
  - func: upload-build
- name: build-and-run-authentication-tests-openssl-1.0.1-fips
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.0.1u-fips
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS=-Wno-redundant-decls DEBUG=ON SASL=OFF SSL=OPENSSL bash .evergreen/scripts/compile.sh
  - func: run auth tests
  - func: upload-build
- name: build-and-run-authentication-tests-openssl-1.0.2
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.0.2l
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env CFLAGS=-Wno-redundant-decls DEBUG=ON SASL=OFF SSL=OPENSSL bash .evergreen/scripts/compile.sh
  - func: run auth tests
  - func: upload-build
- name: build-and-run-authentication-tests-openssl-1.1.0
  commands:
  - func: install ssl
    vars:
      SSL: openssl-1.1.0l
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG=ON SASL=OFF SSL=OPENSSL bash .evergreen/scripts/compile.sh
  - func: run auth tests
  - func: upload-build
- name: build-and-run-authentication-tests-libressl-2.5
  commands:
  - func: install ssl
    vars:
      SSL: libressl-2.5.2
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG=ON SASL=OFF SSL=LIBRESSL bash .evergreen/scripts/compile.sh
  - func: run auth tests
    vars:
      require_tls12: true
  - func: upload-build
- name: build-and-run-authentication-tests-libressl-3.0-auto
  commands:
  - func: install ssl
    vars:
      SSL: libressl-3.0.2
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG=ON SASL=OFF SSL=AUTO bash .evergreen/scripts/compile.sh
  - func: run auth tests
    vars:
      require_tls12: true
  - func: upload-build
- name: build-and-run-authentication-tests-libressl-3.0
  commands:
  - func: install ssl
    vars:
      SSL: libressl-3.0.2
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        env DEBUG=ON SASL=OFF SSL=LIBRESSL bash .evergreen/scripts/compile.sh
  - func: run auth tests
    vars:
      require_tls12: true
  - func: upload-build
- name: test-latest-server-ipv6-client-ipv6-noauth-nosasl-nossl
  tags:
  - ipv4-ipv6
  - latest
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      IPV4_ONLY: 'off'
  - func: run-simple-http-server
  - func: run-tests
    vars:
      IPV4_ONLY: 'off'
      URI: mongodb://[::1]/
- name: test-latest-server-ipv6-client-ipv4-noauth-nosasl-nossl
  tags:
  - ipv4-ipv6
  - latest
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      IPV4_ONLY: 'off'
  - func: run-simple-http-server
  - func: run-tests
    vars:
      IPV4_ONLY: 'off'
      URI: mongodb://127.0.0.1/
- name: test-latest-server-ipv4-client-ipv4-noauth-nosasl-nossl
  tags:
  - ipv4-ipv6
  - latest
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      IPV4_ONLY: 'on'
  - func: run-simple-http-server
  - func: run-tests
    vars:
      IPV4_ONLY: 'on'
      URI: mongodb://127.0.0.1/
- name: test-latest-server-ipv4-client-localhost-noauth-nosasl-nossl
  tags:
  - ipv4-ipv6
  - latest
  - nosasl
  - nossl
  - server
  depends_on:
    name: debug-compile-nosasl-nossl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-nossl
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      IPV4_ONLY: 'on'
  - func: run-simple-http-server
  - func: run-tests
    vars:
      IPV4_ONLY: 'on'
      URI: mongodb://localhost/
- name: debug-compile-aws
  commands:
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        export distro_id='${distro_id}' # Required by find_cmake_latest.
        . .evergreen/scripts/find-cmake-latest.sh
        cmake_binary="$(find_cmake_latest)"
        # Allow reuse of ccache compilation results between different build directories.
        export CCACHE_BASEDIR CCACHE_NOHASHDIR
        CCACHE_BASEDIR="$(pwd)"
        CCACHE_NOHASHDIR=1
        # Compile test-awsauth. Disable unnecessary dependencies since test-awsauth is copied to a remote Ubuntu 20.04 ECS cluster for testing, which may not have all dependent libraries.
        export CC='${CC}'
        "$cmake_binary" -DENABLE_TRACING=ON -DENABLE_SASL=OFF -DENABLE_SNAPPY=OFF -DENABLE_ZSTD=OFF -DENABLE_CLIENT_SIDE_ENCRYPTION=OFF .
        "$cmake_binary" --build . --target test-awsauth
  - func: upload-build
- name: test-aws-openssl-regular-latest
  tags:
  - latest
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: latest
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: REGULAR
- name: test-aws-openssl-regular-7.0
  tags:
  - '7.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '7.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: REGULAR
- name: test-aws-openssl-regular-6.0
  tags:
  - '6.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '6.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: REGULAR
- name: test-aws-openssl-regular-5.0
  tags:
  - '5.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '5.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: REGULAR
- name: test-aws-openssl-regular-4.4
  tags:
  - '4.4'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '4.4'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: REGULAR
- name: test-aws-openssl-ec2-latest
  tags:
  - latest
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: latest
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: EC2
- name: test-aws-openssl-ec2-7.0
  tags:
  - '7.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '7.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: EC2
- name: test-aws-openssl-ec2-6.0
  tags:
  - '6.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '6.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: EC2
- name: test-aws-openssl-ec2-5.0
  tags:
  - '5.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '5.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: EC2
- name: test-aws-openssl-ec2-4.4
  tags:
  - '4.4'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '4.4'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: EC2
- name: test-aws-openssl-ecs-latest
  tags:
  - latest
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: latest
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ECS
- name: test-aws-openssl-ecs-7.0
  tags:
  - '7.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '7.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ECS
- name: test-aws-openssl-ecs-6.0
  tags:
  - '6.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '6.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ECS
- name: test-aws-openssl-ecs-5.0
  tags:
  - '5.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '5.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ECS
- name: test-aws-openssl-ecs-4.4
  tags:
  - '4.4'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '4.4'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ECS
- name: test-aws-openssl-lambda-latest
  tags:
  - latest
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: latest
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: LAMBDA
- name: test-aws-openssl-lambda-7.0
  tags:
  - '7.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '7.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: LAMBDA
- name: test-aws-openssl-lambda-6.0
  tags:
  - '6.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '6.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: LAMBDA
- name: test-aws-openssl-lambda-5.0
  tags:
  - '5.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '5.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: LAMBDA
- name: test-aws-openssl-lambda-4.4
  tags:
  - '4.4'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '4.4'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: LAMBDA
- name: test-aws-openssl-assume_role-latest
  tags:
  - latest
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: latest
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE
- name: test-aws-openssl-assume_role-7.0
  tags:
  - '7.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '7.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE
- name: test-aws-openssl-assume_role-6.0
  tags:
  - '6.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '6.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE
- name: test-aws-openssl-assume_role-5.0
  tags:
  - '5.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '5.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE
- name: test-aws-openssl-assume_role-4.4
  tags:
  - '4.4'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '4.4'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE
- name: test-aws-openssl-assume_role_with_web_identity-latest
  tags:
  - latest
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: latest
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE_WITH_WEB_IDENTITY
- name: test-aws-openssl-assume_role_with_web_identity-7.0
  tags:
  - '7.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '7.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE_WITH_WEB_IDENTITY
- name: test-aws-openssl-assume_role_with_web_identity-6.0
  tags:
  - '6.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '6.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE_WITH_WEB_IDENTITY
- name: test-aws-openssl-assume_role_with_web_identity-5.0
  tags:
  - '5.0'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '5.0'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE_WITH_WEB_IDENTITY
- name: test-aws-openssl-assume_role_with_web_identity-4.4
  tags:
  - '4.4'
  - test-aws
  depends_on:
    name: debug-compile-aws
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-aws
  - func: fetch-det
  - func: bootstrap-mongo-orchestration
    vars:
      AUTH: auth
      MONGODB_VERSION: '4.4'
      ORCHESTRATION_FILE: auth-aws
      TOPOLOGY: server
  - func: run aws tests
    vars:
      TESTCASE: ASSUME_ROLE_WITH_WEB_IDENTITY
- name: ocsp-openssl-test_1-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-rsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-rsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_1-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_1-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_2-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_2-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-delegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-delegate-7.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-delegate-6.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-delegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-delegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-delegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-delegate-7.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-delegate-6.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-delegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-delegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-nodelegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-nodelegate-7.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-nodelegate-6.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-nodelegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_3-rsa-nodelegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-nodelegate-7.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-nodelegate-6.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_3-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_3-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_3-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_3 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-delegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-delegate-7.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-delegate-6.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-delegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-delegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-delegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-delegate-7.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-delegate-6.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-delegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-delegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-nodelegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-nodelegate-7.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-nodelegate-6.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-nodelegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-test_4-rsa-nodelegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-nodelegate-7.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-nodelegate-6.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-test_4-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-test_4-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-test_4-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-soft_fail_test-rsa-nodelegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-soft_fail_test-rsa-nodelegate-7.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-soft_fail_test-rsa-nodelegate-6.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-soft_fail_test-rsa-nodelegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-soft_fail_test-rsa-nodelegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-soft_fail_test-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-soft_fail_test-rsa-nodelegate-7.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-soft_fail_test-rsa-nodelegate-6.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-soft_fail_test-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-soft_fail_test-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-soft_fail_test-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-soft_fail_test-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=SOFT_FAIL_TEST CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-delegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-delegate-7.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-delegate-6.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-delegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-delegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-delegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-delegate-7.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-delegate-6.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-delegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-delegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-delegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-delegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-delegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-delegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-delegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-delegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=ON bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-nodelegate-latest
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-nodelegate-7.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-nodelegate-6.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-darwinssl-malicious_server_test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-darwinssl
  depends_on:
    name: debug-compile-nosasl-darwinssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-darwinssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-nodelegate-7.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-nodelegate-6.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_1-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_1-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_1-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_1 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_2-rsa-nodelegate-latest
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_2-rsa-nodelegate-7.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_2-rsa-nodelegate-6.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_2-rsa-nodelegate-5.0
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-winssl-malicious_server_test_2-rsa-nodelegate-4.4
  tags:
  - ocsp-winssl
  depends_on:
    name: debug-compile-nosasl-winssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-winssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-malicious_server_test_2-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-malicious_server_test_2-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-mustStaple-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib TEST_COLUMN=MALICIOUS_SERVER_TEST_2 CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-test.sh
  patchable: false
- name: ocsp-openssl-cache-rsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-cache-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-cache-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-cache-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-cache-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-rsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-rsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-rsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-rsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-rsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=rsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: rsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=rsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-cache-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-cache-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-cache-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-cache-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-cache-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl
  depends_on:
    name: debug-compile-nosasl-openssl
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-ecdsa-nodelegate-latest
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: latest
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-ecdsa-nodelegate-7.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '7.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-ecdsa-nodelegate-6.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '6.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-ecdsa-nodelegate-5.0
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '5.0'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: ocsp-openssl-1.0.1-cache-ecdsa-nodelegate-4.4
  tags:
  - ocsp-openssl-1.0.1
  depends_on:
    name: debug-compile-nosasl-openssl-1.0.1
  commands:
  - func: fetch-build
    vars:
      BUILD_NAME: debug-compile-nosasl-openssl-1.0.1
  - func: fetch-det
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        TEST_COLUMN=TEST_4 CERT_TYPE=ecdsa USE_DELEGATE=OFF bash .evergreen/scripts/run-ocsp-responder.sh
  - func: bootstrap-mongo-orchestration
    vars:
      MONGODB_VERSION: '4.4'
      OCSP: 'on'
      ORCHESTRATION_FILE: ecdsa-basic-tls-ocsp-disableStapling
      SSL: ssl
      TOPOLOGY: server
  - command: shell.exec
    type: test
    params:
      working_dir: mongoc
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$(pwd)/install-dir/lib CERT_TYPE=ecdsa bash .evergreen/scripts/run-ocsp-cache-test.sh
  patchable: false
- name: testazurekms-task
  commands:
  - func: fetch-source
  - command: shell.exec
    params:
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        echo "Building test-azurekms ... begin"
        pushd mongoc
        ./.evergreen/scripts/compile-test-azurekms.sh
        popd
        echo "Building test-azurekms ... end"
        echo "Copying files ... begin"
        export AZUREKMS_RESOURCEGROUP=${testazurekms_resourcegroup}
        export AZUREKMS_VMNAME=${AZUREKMS_VMNAME}
        export AZUREKMS_PRIVATEKEYPATH=/tmp/testazurekms_privatekey
        DRIVERS_TOOLS=$(pwd)/drivers-evergreen-tools
        mkdir testazurekms
        cp ./mongoc/src/libmongoc/test-azurekms ./mongoc/install/lib/libmongocrypt.* testazurekms
        tar czf testazurekms.tgz testazurekms/*
        AZUREKMS_SRC="testazurekms.tgz" \
        AZUREKMS_DST="./" \
            $DRIVERS_TOOLS/.evergreen/csfle/azurekms/copy-file.sh
        echo "Copying files ... end"
        echo "Untarring file ... begin"
        AZUREKMS_CMD="tar xf testazurekms.tgz" \
            $DRIVERS_TOOLS/.evergreen/csfle/azurekms/run-command.sh
        echo "Untarring file ... end"
  - command: shell.exec
    type: test
    params:
      shell: bash
      script: |-
        set -o errexit
        export AZUREKMS_RESOURCEGROUP=${testazurekms_resourcegroup}
        export AZUREKMS_VMNAME=${AZUREKMS_VMNAME}
        export AZUREKMS_PRIVATEKEYPATH=/tmp/testazurekms_privatekey
        DRIVERS_TOOLS=$(pwd)/drivers-evergreen-tools
        AZUREKMS_CMD="LD_LIBRARY_PATH=./testazurekms MONGODB_URI='mongodb://localhost:27017' KEY_NAME='${testazurekms_keyname}' KEY_VAULT_ENDPOINT='${testazurekms_keyvaultendpoint}' ./testazurekms/test-azurekms" \
            $DRIVERS_TOOLS/.evergreen/csfle/azurekms/run-command.sh
- name: testazurekms-fail-task
  commands:
  - func: fetch-source
  - command: shell.exec
    params:
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        pushd mongoc
        ./.evergreen/scripts/compile-test-azurekms.sh
        popd
  - command: shell.exec
    type: test
    params:
      shell: bash
      script: |-
        set -o errexit
        LD_LIBRARY_PATH=$PWD/install \
        MONGODB_URI='mongodb://localhost:27017' \
        KEY_NAME='${testazurekms_keyname}' \
        KEY_VAULT_ENDPOINT='${testazurekms_keyvaultendpoint}' \
        EXPECT_ERROR='Error from Azure IMDS server' \
            ./mongoc/src/libmongoc/test-azurekms
- name: testgcpkms-task
  commands:
  - func: fetch-source
  - command: shell.exec
    params:
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        echo "Building test-gcpkms ... begin"
        pushd mongoc
        ./.evergreen/scripts/compile-test-gcpkms.sh
        popd
        echo "Building test-gcpkms ... end"
        echo "Copying files ... begin"
        export GCPKMS_GCLOUD=${GCPKMS_GCLOUD}
        export GCPKMS_PROJECT=${GCPKMS_PROJECT}
        export GCPKMS_ZONE=${GCPKMS_ZONE}
        export GCPKMS_INSTANCENAME=${GCPKMS_INSTANCENAME}
        DRIVERS_TOOLS=$(pwd)/drivers-evergreen-tools
        mkdir testgcpkms
        cp ./mongoc/src/libmongoc/test-gcpkms ./mongoc/install/lib/libmongocrypt.* testgcpkms
        tar czf testgcpkms.tgz testgcpkms/*
        GCPKMS_SRC="testgcpkms.tgz" GCPKMS_DST=$GCPKMS_INSTANCENAME: $DRIVERS_TOOLS/.evergreen/csfle/gcpkms/copy-file.sh
        echo "Copying files ... end"
        echo "Untarring file ... begin"
        GCPKMS_CMD="tar xf testgcpkms.tgz" $DRIVERS_TOOLS/.evergreen/csfle/gcpkms/run-command.sh
        echo "Untarring file ... end"
  - command: shell.exec
    type: test
    params:
      shell: bash
      script: |-
        set -o errexit
        export GCPKMS_GCLOUD=${GCPKMS_GCLOUD}
        export GCPKMS_PROJECT=${GCPKMS_PROJECT}
        export GCPKMS_ZONE=${GCPKMS_ZONE}
        export GCPKMS_INSTANCENAME=${GCPKMS_INSTANCENAME}
        DRIVERS_TOOLS=$(pwd)/drivers-evergreen-tools
        GCPKMS_CMD="LD_LIBRARY_PATH=./testgcpkms MONGODB_URI='mongodb://localhost:27017' ./testgcpkms/test-gcpkms" $DRIVERS_TOOLS/.evergreen/csfle/gcpkms/run-command.sh
- name: testgcpkms-fail-task
  commands:
  - command: shell.exec
    params:
      add_expansions_to_env: true
      shell: bash
      script: |-
        set -o errexit
        pushd mongoc
        ./.evergreen/scripts/compile-test-gcpkms.sh
        popd
  - command: shell.exec
    type: test
    params:
      shell: bash
      script: |-
        set -o errexit
        export GCPKMS_GCLOUD=${GCPKMS_GCLOUD}
        export GCPKMS_PROJECT=${GCPKMS_PROJECT}
        export GCPKMS_ZONE=${GCPKMS_ZONE}
        export GCPKMS_INSTANCENAME=${GCPKMS_INSTANCENAME}
        LD_LIBRARY_PATH=$(pwd)/install MONGODB_URI='mongodb://localhost:27017' EXPECT_ERROR='Failed to connect to: metadata.google.internal' ./mongoc/src/libmongoc/test-gcpkms
task_groups:
- name: testazurekms_task_group
  setup_group:
  - func: fetch-det
  - command: shell.exec
    params:
      shell: bash
      script: |-
        set -o errexit
        DRIVERS_TOOLS=$(pwd)/drivers-evergreen-tools
        echo '${testazurekms_publickey}' > /tmp/testazurekms_publickey
        echo '${testazurekms_privatekey}' > /tmp/testazurekms_privatekey
        # Set 600 permissions on private key file. Otherwise ssh / scp may error with permissions "are too open".
        chmod 600 /tmp/testazurekms_privatekey
        export AZUREKMS_CLIENTID=${testazurekms_clientid}
        export AZUREKMS_TENANTID=${testazurekms_tenantid}
        export AZUREKMS_SECRET=${testazurekms_secret}
        export AZUREKMS_DRIVERS_TOOLS=$DRIVERS_TOOLS
        export AZUREKMS_RESOURCEGROUP=${testazurekms_resourcegroup}
        export AZUREKMS_PUBLICKEYPATH=/tmp/testazurekms_publickey
        export AZUREKMS_PRIVATEKEYPATH=/tmp/testazurekms_privatekey
        export AZUREKMS_SCOPE=${testazurekms_scope}
        export AZUREKMS_VMNAME_PREFIX=CDRIVER
        $DRIVERS_TOOLS/.evergreen/csfle/azurekms/create-and-setup-vm.sh
  - command: expansions.update
    params:
      file: testazurekms-expansions.yml
  teardown_group:
  - command: expansions.update
    params:
      file: testazurekms-expansions.yml
  - command: shell.exec
    params:
      shell: bash
      script: |-
        set -o errexit
        DRIVERS_TOOLS=$(pwd)/drivers-evergreen-tools
        export AZUREKMS_VMNAME=${AZUREKMS_VMNAME}
        export AZUREKMS_RESOURCEGROUP=${testazurekms_resourcegroup}
        $DRIVERS_TOOLS/.evergreen/csfle/azurekms/delete-vm.sh
  setup_group_can_fail_task: true
  setup_group_timeout_secs: 1800
  tasks:
  - testazurekms-task
- name: testgcpkms_task_group
  setup_group:
  - func: fetch-det
  - command: shell.exec
    params:
      shell: bash
      script: |-
        set -o errexit
        DRIVERS_TOOLS=$(pwd)/drivers-evergreen-tools
        echo '${testgcpkms_key_file}' > /tmp/testgcpkms_key_file.json
        export GCPKMS_KEYFILE=/tmp/testgcpkms_key_file.json
        export GCPKMS_DRIVERS_TOOLS=$DRIVERS_TOOLS
        export GCPKMS_SERVICEACCOUNT="${testgcpkms_service_account}"
        $DRIVERS_TOOLS/.evergreen/csfle/gcpkms/create-and-setup-instance.sh
  - command: expansions.update
    params:
      file: testgcpkms-expansions.yml
  teardown_group:
  - command: shell.exec
    params:
      shell: bash
      script: |-
        set -o errexit
        DRIVERS_TOOLS=$(pwd)/drivers-evergreen-tools
        export GCPKMS_GCLOUD=${GCPKMS_GCLOUD}
        export GCPKMS_PROJECT=${GCPKMS_PROJECT}
        export GCPKMS_ZONE=${GCPKMS_ZONE}
        export GCPKMS_INSTANCENAME=${GCPKMS_INSTANCENAME}
        $DRIVERS_TOOLS/.evergreen/csfle/gcpkms/delete-instance.sh
  setup_group_can_fail_task: true
  setup_group_timeout_secs: 1800
  tasks:
  - testgcpkms-task
buildvariants:
- name: abi-compliance-check
  display_name: ABI Compliance Check
  run_on:
  - ubuntu1804-small
  - ubuntu1804-medium
  - ubuntu1804-large
  tasks:
  - abi-compliance-check
- name: smoke
  display_name: Smoke Tests
  expansions:
    SKIP_LEGACY_SHELL: '1'
  run_on: ubuntu2204-small
  tasks:
  - make-docs
  - kms-divergence-check
  - release-compile
  - debug-compile-no-counters
  - compile-tracing
  - link-with-cmake
  - link-with-cmake-deprecated
  - link-with-cmake-ssl
  - link-with-cmake-ssl-deprecated
  - link-with-cmake-snappy
  - link-with-cmake-snappy-deprecated
  - name: link-with-cmake-mac
    distros:
    - macos-1100
  - name: link-with-cmake-mac-deprecated
    distros:
    - macos-1100
  - name: link-with-cmake-windows
    distros:
    - windows-vsCurrent-large
  - name: link-with-cmake-windows-ssl
    distros:
    - windows-vsCurrent-large
  - name: link-with-cmake-windows-snappy
    distros:
    - windows-vsCurrent-large
  - name: link-with-cmake-mingw
    distros:
    - windows-vsCurrent-large
  - name: link-with-pkg-config
    distros:
    - ubuntu1804-test
  - name: link-with-pkg-config-mac
    distros:
    - macos-1100
  - link-with-pkg-config-ssl
  - link-with-bson
  - name: link-with-bson-windows
    distros:
    - windows-vsCurrent-large
  - name: link-with-bson-mac
    distros:
    - macos-1100
  - name: link-with-bson-mingw
    distros:
    - windows-vsCurrent-large
  - check-headers
  - install-uninstall-check
  - name: install-uninstall-check-mingw
    distros:
    - windows-vsCurrent-large
  - name: install-uninstall-check-msvc
    distros:
    - windows-vsCurrent-large
  - debug-compile-with-warnings
  - name: build-and-test-with-toolchain
    distros:
    - debian10-small
  - install-libmongoc-after-libbson
  tags:
  - pr-merge-gate
- name: clang38
  display_name: clang 3.8 (Debian 9.2)
  expansions:
    CC: clang
  run_on: debian92-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .latest .nossl
- name: openssl
  display_name: OpenSSL / LibreSSL
  run_on: archlinux-build
  tasks:
  - build-and-run-authentication-tests-openssl-1.0.1
  - build-and-run-authentication-tests-openssl-1.0.2
  - build-and-run-authentication-tests-openssl-1.1.0
  - build-and-run-authentication-tests-openssl-1.0.1-fips
  - build-and-run-authentication-tests-libressl-2.5
  - build-and-run-authentication-tests-libressl-3.0-auto
  - build-and-run-authentication-tests-libressl-3.0
- name: clang37
  display_name: clang 3.7 (Archlinux)
  expansions:
    CC: clang
  run_on: archlinux-test
  tasks:
  - release-compile
  - debug-compile-sasl-openssl
  - debug-compile-nosasl-openssl
  - .authentication-tests .openssl
- name: clang60-i686
  display_name: clang 6.0 (i686) (Ubuntu 18.04)
  expansions:
    CC: clang
    MARCH: i686
  run_on: ubuntu1804-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .debug-compile !.sspi .nossl .nosasl
  - .latest .nossl .nosasl
- name: clang38-i686
  display_name: clang 3.8 (i686) (Ubuntu 16.04)
  expansions:
    CC: clang
    MARCH: i686
  run_on: ubuntu1604-test
  tasks:
  - release-compile
  - debug-compile-no-align
- name: clang38ubuntu
  display_name: clang 3.8 (Ubuntu 16.04)
  expansions:
    CC: clang
  run_on: ubuntu1604-test
  tasks:
  - .compression !.zstd
  - release-compile
  - debug-compile-sasl-openssl
  - debug-compile-nosasl-openssl
  - debug-compile-no-align
  - .authentication-tests .openssl
- name: gcc82rhel
  display_name: GCC 8.2 (RHEL 8.0)
  expansions:
    CC: gcc
  run_on: rhel80-test
  tasks:
  - .hardened
  - .compression !.snappy !.zstd
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-nosasl-openssl
  - debug-compile-sasl-openssl
  - .authentication-tests .openssl
  - .latest .nossl
- name: gcc48rhel
  display_name: GCC 4.8 (RHEL 7.0)
  expansions:
    CC: gcc
  run_on: rhel70
  tasks:
  - .hardened
  - .compression !.snappy
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-sasl-openssl
  - debug-compile-nosasl-openssl
  - .authentication-tests .openssl
  - .latest .nossl
- name: gcc63
  display_name: GCC 6.3 (Debian 9.2)
  expansions:
    CC: gcc
  run_on: debian92-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .latest .nossl
- name: gcc83
  display_name: GCC 8.3 (Debian 10.0)
  expansions:
    CC: gcc
  run_on: debian10-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .latest .nossl
- name: gcc102
  display_name: GCC 10.2 (Debian 11.0)
  expansions:
    CC: gcc
  run_on: debian11-large
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .latest .nossl
- name: gcc94
  display_name: GCC 9.4 (Ubuntu 20.04)
  expansions:
    CC: gcc
  run_on: ubuntu2004-large
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - .latest .nossl
- name: gcc75-i686
  display_name: GCC 7.5 (i686) (Ubuntu 18.04)
  expansions:
    CC: gcc
    MARCH: i686
  run_on: ubuntu1804-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - .latest .nossl .nosasl
- name: gcc75
  display_name: GCC 7.5 (Ubuntu 18.04)
  expansions:
    CC: gcc
  run_on: ubuntu1804-test
  tasks:
  - .compression !.zstd
  - debug-compile-nosrv
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-no-align
  - debug-compile-sasl-openssl
  - debug-compile-nosasl-openssl
  - .authentication-tests .openssl
  - .authentication-tests .asan
  - .test-coverage
  - .latest .nossl
  - retry-true-latest-server
  - test-dns-openssl
  - test-dns-auth-openssl
  - test-dns-loadbalanced-openssl
- name: gcc54
  display_name: GCC 5.4 (Ubuntu 16.04)
  expansions:
    CC: gcc
  run_on: ubuntu1604-test
  tasks:
  - .compression !.zstd
  - debug-compile-nosrv
  - release-compile
  - debug-compile-no-align
- name: darwin
  display_name: '*Darwin, macOS (Apple LLVM)'
  expansions:
    CC: clang
  run_on: macos-1100
  tasks:
  - .compression !.snappy
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-rdtscp
  - debug-compile-no-align
  - debug-compile-nosrv
  - debug-compile-sasl-darwinssl
  - debug-compile-nosasl-nossl
  - .authentication-tests .darwinssl
  - .latest .nossl
  - test-dns-darwinssl
  - test-dns-auth-darwinssl
  - debug-compile-lto
  - debug-compile-lto-thin
  - debug-compile-aws
  - test-aws-openssl-regular-4.4
  - test-aws-openssl-regular-latest
- name: windows-2017-32
  display_name: Windows (i686) (VS 2017)
  expansions:
    CC: Visual Studio 15 2017
  run_on: windows-vsCurrent-large
  tasks:
  - debug-compile-nosasl-nossl
  - .latest .nossl .nosasl
- name: windows-2017
  display_name: Windows (VS 2017)
  expansions:
    CC: Visual Studio 15 2017 Win64
  run_on: windows-vsCurrent-large
  tasks:
  - debug-compile-nosasl-nossl
  - debug-compile-nosasl-openssl
  - debug-compile-sspi-winssl
  - .latest .nossl
  - .nosasl .latest .nossl
  - test-dns-winssl
  - test-dns-auth-winssl
  - debug-compile-aws
  - test-aws-openssl-regular-4.4
  - test-aws-openssl-regular-latest
  - .authentication-tests .openssl !.sasl
  - .authentication-tests .winssl
- name: windows-2015
  display_name: Windows (VS 2015)
  expansions:
    CC: Visual Studio 14 2015 Win64
  run_on: windows-64-vs2015-compile
  tasks:
  - .compression !.snappy !.zstd !.latest
  - release-compile
  - debug-compile-sspi-winssl
  - debug-compile-no-align
  - debug-compile-nosrv
  - .authentication-tests .winssl
- name: windows-2015-32
  display_name: Windows (i686) (VS 2015)
  expansions:
    CC: Visual Studio 14 2015
  run_on: windows-64-vs2015-compile
  tasks:
  - .compression !.snappy !.zstd !.latest
  - release-compile
  - debug-compile-sspi-winssl
  - debug-compile-no-align
  - .authentication-tests .winssl
- name: windows-2013
  display_name: Windows (VS 2013)
  expansions:
    CC: Visual Studio 12 2013 Win64
  run_on: windows-64-vs2013-compile
  tasks:
  - .compression !.snappy !.zstd !.latest
  - release-compile
  - debug-compile-sspi-winssl
  - .authentication-tests .winssl
- name: windows-2013-32
  display_name: Windows (i686) (VS 2013)
  expansions:
    CC: Visual Studio 12 2013
  run_on: windows-64-vs2013-compile
  tasks:
  - release-compile
  - debug-compile-rdtscp
  - debug-compile-sspi-winssl
  - .authentication-tests .winssl
- name: mingw-windows2016
  display_name: MinGW-W64 (Windows Server 2016)
  expansions:
    CC: mingw
  run_on: windows-vsCurrent-large
  tasks:
  - debug-compile-nosasl-nossl
  - .latest .nossl .nosasl .server
- name: mingw
  display_name: MinGW-W64
  expansions:
    CC: mingw
  run_on: windows-vsCurrent-large
  tasks:
  - debug-compile-no-align
- name: power8-rhel81
  display_name: Power8 (ppc64le) (RHEL 8.1)
  expansions:
    CC: gcc
  run_on: rhel81-power8-test
  tasks:
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-sasl-openssl
  - .latest .nossl
  - test-dns-openssl
  batchtime: 1440
- name: arm-ubuntu1804
  display_name: '*ARM (aarch64) (Ubuntu 18.04)'
  expansions:
    CC: gcc
  run_on: ubuntu1804-arm64-large
  tasks:
  - .compression !.snappy !.zstd
  - debug-compile-no-align
  - release-compile
  - debug-compile-nosasl-nossl
  - debug-compile-nosasl-openssl
  - debug-compile-sasl-openssl
  - .authentication-tests .openssl
  - .latest .nossl
  - test-dns-openssl
  batchtime: 1440
- name: arm-ubuntu1604
  display_name: '*ARM (aarch64) (Ubuntu 16.04)'
  expansions:
    CC: gcc
  run_on: ubuntu1604-arm64-large
  tasks:
  - .compression !.snappy !.zstd
  - debug-compile-no-align
  - release-compile
  batchtime: 1440
- name: zseries-rhel83
  display_name: '*zSeries'
  expansions:
    CC: gcc
  run_on: rhel83-zseries-small
  tasks:
  - release-compile
  - debug-compile-no-align
  - debug-compile-nosasl-nossl
  - debug-compile-nosasl-openssl
  - debug-compile-sasl-openssl
  - .authentication-tests .openssl
  - .latest .nossl
  batchtime: 1440
- name: clang60ubuntu
  display_name: clang 6.0 (Ubuntu 18.04)
  expansions:
    CC: clang
  run_on: ubuntu1804-test
  tasks:
  - debug-compile-sasl-openssl-static
  - .authentication-tests .asan
- name: aws-ubuntu2004
  display_name: AWS Tests (Ubuntu 20.04)
  expansions:
    CC: clang
  run_on: ubuntu2004-small
  tasks:
  - debug-compile-aws
  - .test-aws .4.4
  - .test-aws .5.0
- name: aws-ubuntu2204
  display_name: AWS Tests (Ubuntu 22.04)
  expansions:
    CC: clang
  run_on: ubuntu2004-small
  tasks:
  - debug-compile-aws
  - .test-aws .6.0
  - .test-aws .7.0
  - .test-aws .latest
- name: mongohouse
  display_name: Mongohouse Test
  run_on: ubuntu2204-small
  tasks:
  - debug-compile-sasl-openssl
  - test-mongohouse
- name: ocsp
  display_name: OCSP tests
  run_on: ubuntu2004-small
  tasks:
  - name: debug-compile-nosasl-openssl
  - name: debug-compile-nosasl-openssl-static
  - name: debug-compile-nosasl-darwinssl
    distros:
    - macos-1100
  - name: debug-compile-nosasl-winssl
    distros:
    - windows-vsCurrent-large
  - name: .ocsp-openssl
  - name: .ocsp-darwinssl
    distros:
    - macos-1100
  - name: .ocsp-winssl
    distros:
    - windows-vsCurrent-large
  - name: debug-compile-nosasl-openssl-1.0.1
  - name: .ocsp-openssl-1.0.1
  batchtime: 10080
- name: packaging
  display_name: Linux Distro Packaging
  run_on: ubuntu1804-test
  tasks:
  - debian-package-build
  - name: rpm-package-build
    distros:
    - rhel90-arm64-small
  tags:
  - pr-merge-gate
- name: versioned-api-ubuntu1804
  display_name: Versioned API Tests (Ubuntu 18.04)
  run_on: ubuntu1804-test
  tasks:
  - debug-compile-nosasl-openssl
  - debug-compile-nosasl-nossl
  - .versioned-api .5.0
  - .versioned-api .6.0
- name: versioned-api-ubuntu2004
  display_name: Versioned API Tests (Ubuntu 20.04)
  run_on: ubuntu2004-test
  tasks:
  - debug-compile-nosasl-openssl
  - debug-compile-nosasl-nossl
  - .versioned-api .7.0
- name: testazurekms-variant
  display_name: Azure KMS
  run_on: debian10-small
  tasks:
  - testazurekms_task_group
  - testazurekms-fail-task
  batchtime: 20160
- name: testgcpkms-variant
  display_name: GCP KMS
  run_on: debian11-small
  tasks:
  - testgcpkms_task_group
  - testgcpkms-fail-task
  batchtime: 20160
