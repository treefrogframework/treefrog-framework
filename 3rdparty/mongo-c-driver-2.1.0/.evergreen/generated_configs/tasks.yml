tasks:
  - name: abi-compliance-check
    commands:
      - func: abi-compliance-check
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, compile, rhel8-latest, clang, cse, asan, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "4.2", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-replica-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "4.2", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "4.2", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-server-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "4.2", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "4.4", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-replica-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "4.4", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "4.4", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-server-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "4.4", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "5.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-replica-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "5.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "5.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-server-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "5.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "6.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-replica-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "6.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "6.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-server-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "6.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "7.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-replica-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "7.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "7.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-server-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "7.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "8.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-replica-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, "8.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "8.0", openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-server-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, "8.0", with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, latest, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-replica-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, replica, latest, with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, latest, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-server-auth-with-mongocrypt
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, cse, asan, auth, server, latest, with-mongocrypt, openssl]
    depends_on: [{ name: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-cse-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
            - { key: CLIENT_SIDE_ENCRYPTION, value: "on" }
            - { key: SKIP_CRYPT_SHARED_LIB, value: "on" }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-mock-kms-servers
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, compile, rhel8-latest, clang, asan, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, replica, "4.2", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, server, "4.2", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, sharded, "4.2", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, replica, "4.4", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, server, "4.4", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, sharded, "4.4", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, replica, "5.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, server, "5.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, sharded, "5.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, replica, "6.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, server, "6.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, sharded, "6.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, replica, "7.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, server, "7.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, sharded, "7.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, replica, "8.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, server, "8.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, sharded, "8.0", openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, replica, latest, openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, server, latest, openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: asan-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-asan, test, rhel8-latest, clang, sasl-cyrus, asan, auth, sharded, latest, openssl]
    depends_on: [{ name: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: asan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: check-headers
    commands:
      - func: check-headers
  - name: "check:sasl=Cyrus\_\u2022\_tls=OpenSSL\_\u2022\_test_mongocxx_ref=master"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=master
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example test-cxx-driver
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=master
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=Cyrus\_\u2022\_tls=OpenSSL\_\u2022\_test_mongocxx_ref=none"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, centos7-clang, centos7-gcc, u16-clang, u16-gcc, u18-clang, u18-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=none
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=none
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=Cyrus\_\u2022\_tls=OpenSSL\_\u2022\_test_mongocxx_ref=r4.1.0"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=r4.1.0
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example test-cxx-driver
            - --sasl=Cyrus
            - --tls=OpenSSL
            - --test_mongocxx_ref=r4.1.0
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=Cyrus\_\u2022\_tls=off\_\u2022\_test_mongocxx_ref=master"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=master
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example test-cxx-driver
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=master
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=Cyrus\_\u2022\_tls=off\_\u2022\_test_mongocxx_ref=none"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, centos7-clang, centos7-gcc, u16-clang, u16-gcc, u18-clang, u18-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=none
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=none
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=Cyrus\_\u2022\_tls=off\_\u2022\_test_mongocxx_ref=r4.1.0"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=r4.1.0
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example test-cxx-driver
            - --sasl=Cyrus
            - --tls=off
            - --test_mongocxx_ref=r4.1.0
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=off\_\u2022\_tls=OpenSSL\_\u2022\_test_mongocxx_ref=master"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=off
            - --tls=OpenSSL
            - --test_mongocxx_ref=master
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example test-cxx-driver
            - --sasl=off
            - --tls=OpenSSL
            - --test_mongocxx_ref=master
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=off\_\u2022\_tls=OpenSSL\_\u2022\_test_mongocxx_ref=none"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, centos7-clang, centos7-gcc, u16-clang, u16-gcc, u18-clang, u18-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=off
            - --tls=OpenSSL
            - --test_mongocxx_ref=none
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example
            - --sasl=off
            - --tls=OpenSSL
            - --test_mongocxx_ref=none
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=off\_\u2022\_tls=OpenSSL\_\u2022\_test_mongocxx_ref=r4.1.0"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=off
            - --tls=OpenSSL
            - --test_mongocxx_ref=r4.1.0
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example test-cxx-driver
            - --sasl=off
            - --tls=OpenSSL
            - --test_mongocxx_ref=r4.1.0
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=off\_\u2022\_tls=off\_\u2022\_test_mongocxx_ref=master"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=off
            - --tls=off
            - --test_mongocxx_ref=master
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example test-cxx-driver
            - --sasl=off
            - --tls=off
            - --test_mongocxx_ref=master
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=off\_\u2022\_tls=off\_\u2022\_test_mongocxx_ref=none"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, centos7-clang, centos7-gcc, u16-clang, u16-gcc, u18-clang, u18-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=off
            - --tls=off
            - --test_mongocxx_ref=none
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example
            - --sasl=off
            - --tls=off
            - --test_mongocxx_ref=none
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: "check:sasl=off\_\u2022\_tls=off\_\u2022\_test_mongocxx_ref=r4.1.0"
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [earthly, pr-merge-gate, alpine3.16-clang, alpine3.16-gcc, alpine3.17-clang, alpine3.17-gcc, alpine3.18-clang, alpine3.18-gcc, alpine3.19-clang, alpine3.19-gcc, archlinux-clang, archlinux-gcc, u20-clang, u20-gcc, u22-clang, u22-gcc]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: setup
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +env-warmup
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --sasl=off
            - --tls=off
            - --test_mongocxx_ref=r4.1.0
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +run
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
            - --targets=test-example test-cxx-driver
            - --sasl=off
            - --tls=off
            - --test_mongocxx_ref=r4.1.0
            - --env=${MONGOC_EARTHLY_ENV}
            - --c_compiler=${MONGOC_EARTHLY_C_COMPILER}
  - name: clang-format
    tags: [clang-format]
    commands:
      - func: clang-format
  - name: cse-sasl-cyrus-darwinssl-macos-11-arm64-clang-compile
    run_on: macos-11-arm64
    tags: [cse-matrix-darwinssl, compile, macos-11-arm64, clang, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-darwinssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: cse-sasl-cyrus-darwinssl-macos-11-arm64-clang-test-6.0-server-auth
    run_on: macos-11-arm64
    tags: [cse-matrix-darwinssl, test, macos-11-arm64, clang, sasl-cyrus, cse, auth, server, "6.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-11-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-11-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
    run_on: macos-14-arm64
    tags: [cse-matrix-darwinssl, compile, macos-14-arm64, clang, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-darwinssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-test-6.0-server-auth
    run_on: macos-14-arm64
    tags: [cse-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, cse, auth, server, "6.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-test-7.0-replica-auth
    run_on: macos-14-arm64
    tags: [cse-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, cse, auth, replica, "7.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-test-7.0-server-auth
    run_on: macos-14-arm64
    tags: [cse-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, cse, auth, server, "7.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-test-8.0-replica-auth
    run_on: macos-14-arm64
    tags: [cse-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, cse, auth, replica, "8.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-test-8.0-server-auth
    run_on: macos-14-arm64
    tags: [cse-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, cse, auth, server, "8.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-test-latest-replica-auth
    run_on: macos-14-arm64
    tags: [cse-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, cse, auth, replica, latest, darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-test-latest-server-auth
    run_on: macos-14-arm64
    tags: [cse-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, cse, auth, server, latest, darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-clang-compile
    run_on: macos-14
    tags: [cse-matrix-darwinssl, compile, macos-14, clang, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-darwinssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: cse-sasl-cyrus-darwinssl-macos-14-clang-test-4.2-server-auth
    run_on: macos-14
    tags: [cse-matrix-darwinssl, test, macos-14, clang, sasl-cyrus, cse, auth, server, "4.2", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-clang-test-4.4-server-auth
    run_on: macos-14
    tags: [cse-matrix-darwinssl, test, macos-14, clang, sasl-cyrus, cse, auth, server, "4.4", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-darwinssl-macos-14-clang-test-5.0-server-auth
    run_on: macos-14
    tags: [cse-matrix-darwinssl, test, macos-14, clang, sasl-cyrus, cse, auth, server, "5.0", darwinssl]
    depends_on: [{ name: cse-sasl-cyrus-darwinssl-macos-14-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-darwinssl-macos-14-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-debian11-clang-compile
    run_on: debian11-large
    tags: [cse-matrix-openssl, compile, debian11, clang, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-debian11-gcc-compile
    run_on: debian11-large
    tags: [cse-matrix-openssl, compile, debian11, gcc, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-debian12-clang-compile
    run_on: debian12-large
    tags: [cse-matrix-openssl, compile, debian12, clang, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-debian12-gcc-compile
    run_on: debian12-large
    tags: [cse-matrix-openssl, compile, debian12, gcc, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, compile, rhel8-latest, gcc, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-4.2-replica-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, replica, "4.2", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-4.2-server-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, server, "4.2", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-4.4-replica-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, replica, "4.4", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-4.4-server-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, server, "4.4", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-5.0-replica-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, replica, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-5.0-server-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, server, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-6.0-replica-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, replica, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-6.0-server-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, server, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-7.0-replica-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, replica, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-7.0-server-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, server, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-8.0-replica-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, replica, "8.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-8.0-server-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, server, "8.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-latest-replica-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, replica, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-test-latest-server-auth
    run_on: rhel8-latest-large
    tags: [cse-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, cse, auth, server, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
    run_on: rhel8-zseries-large
    tags: [cse-matrix-openssl, compile, rhel8-zseries, gcc, cse, sasl-cyrus]
    patchable: false
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-5.0-replica-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, replica, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-5.0-server-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, server, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-6.0-replica-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, replica, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-6.0-server-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, server, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-7.0-replica-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, replica, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-7.0-server-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, server, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-8.0-replica-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, replica, "8.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-8.0-server-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, server, "8.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-latest-replica-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, replica, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-test-latest-server-auth
    run_on: rhel8-zseries-small
    tags: [cse-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, cse, auth, server, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-rhel80-gcc-compile
    run_on: rhel80-large
    tags: [cse-matrix-openssl, compile, rhel80, gcc, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
    run_on: ubuntu2004-arm64-large
    tags: [cse-matrix-openssl, compile, ubuntu2004-arm64, gcc, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-4.4-replica-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, replica, "4.4", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-4.4-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, server, "4.4", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-5.0-replica-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, replica, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-5.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, server, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-6.0-replica-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, replica, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-6.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, server, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-7.0-replica-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, replica, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-7.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, server, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-8.0-replica-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, replica, "8.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-8.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, server, "8.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-latest-replica-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, replica, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-latest-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [cse-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, cse, auth, server, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [cse-matrix-openssl, compile, ubuntu2004, clang, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu2004-gcc-compile
    run_on: ubuntu2004-large
    tags: [cse-matrix-openssl, compile, ubuntu2004, gcc, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu2204-clang-12-compile
    run_on: ubuntu2204-large
    tags: [cse-matrix-openssl, compile, ubuntu2204, clang-12, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang-12
          CXX: clang++-12
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu2204-gcc-compile
    run_on: ubuntu2204-large
    tags: [cse-matrix-openssl, compile, ubuntu2204, gcc, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu2404-clang-14-compile
    run_on: ubuntu2404-large
    tags: [cse-matrix-openssl, compile, ubuntu2404, clang-14, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: clang-14
          CXX: clang++-14
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-ubuntu2404-gcc-compile
    run_on: ubuntu2404-large
    tags: [cse-matrix-openssl, compile, ubuntu2404, gcc, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [cse-matrix-openssl, compile, windows-vsCurrent, vs2017x64, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-openssl-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: x64
      - func: upload-build
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-4.2-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "4.2", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-4.2-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "4.2", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-4.4-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "4.4", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-4.4-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "4.4", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-5.0-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-5.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "5.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-6.0-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-6.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "6.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-7.0-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-7.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "7.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-8.0-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "8.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-8.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "8.0", openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-latest-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, latest, openssl]
    depends_on: [{ name: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [cse-matrix-winssl, compile, windows-vsCurrent, vs2017x64, cse, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: cse-sasl-cyrus-winssl-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: x64
      - func: upload-build
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-4.2-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "4.2", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-4.4-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "4.4", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-5.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "5.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-6.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "6.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-7.0-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "7.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-7.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "7.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-8.0-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, "8.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-8.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, "8.0", winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-latest-replica-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, replica, latest, winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [cse-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, cse, auth, server, latest, winssl]
    depends_on: [{ name: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: cse-sasl-cyrus-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-mock-kms-servers
      - func: run-tests
  - name: kms-divergence-check
    commands:
      - func: kms-divergence-check
  - name: loadbalanced-rhel8-latest-gcc-compile
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc]
    commands:
      - func: find-cmake-latest
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          env:
            CC: gcc
            CFLAGS: -fno-omit-frame-pointer
            SSL: OPENSSL
          args:
            - -c
            - .evergreen/scripts/compile.sh
      - func: upload-build
  - name: loadbalanced-rhel8-latest-gcc-test-5.0-auth-openssl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, auth, openssl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: auth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "5.0"
          SSL: openssl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: auth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: openssl
  - name: loadbalanced-rhel8-latest-gcc-test-5.0-noauth-nossl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, noauth, nossl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: noauth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "5.0"
          SSL: nossl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: noauth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: nossl
  - name: loadbalanced-rhel8-latest-gcc-test-6.0-auth-openssl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, auth, openssl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: auth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "6.0"
          SSL: openssl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: auth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: openssl
  - name: loadbalanced-rhel8-latest-gcc-test-6.0-noauth-nossl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, noauth, nossl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: noauth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "6.0"
          SSL: nossl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: noauth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: nossl
  - name: loadbalanced-rhel8-latest-gcc-test-7.0-auth-openssl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, auth, openssl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: auth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "7.0"
          SSL: openssl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: auth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: openssl
  - name: loadbalanced-rhel8-latest-gcc-test-7.0-noauth-nossl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, noauth, nossl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: noauth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "7.0"
          SSL: nossl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: noauth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: nossl
  - name: loadbalanced-rhel8-latest-gcc-test-8.0-auth-openssl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, auth, openssl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: auth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "8.0"
          SSL: openssl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: auth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: openssl
  - name: loadbalanced-rhel8-latest-gcc-test-8.0-noauth-nossl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, noauth, nossl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: noauth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: "8.0"
          SSL: nossl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: noauth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: nossl
  - name: loadbalanced-rhel8-latest-gcc-test-latest-auth-openssl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, auth, openssl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: auth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: latest
          SSL: openssl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: auth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: openssl
  - name: loadbalanced-rhel8-latest-gcc-test-latest-noauth-nossl
    run_on: rhel8-latest-large
    tags: [loadbalanced, rhel8-latest, gcc, noauth, nossl]
    depends_on: [{ name: loadbalanced-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: loadbalanced-rhel8-latest-gcc-compile
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
        vars:
          AUTH: noauth
          LOAD_BALANCER: "on"
          MONGODB_VERSION: latest
          SSL: nossl
          TOPOLOGY: sharded_cluster
      - func: run-simple-http-server
      - func: start-load-balancer
        vars:
          MONGODB_URI: mongodb://localhost:27017,localhost:27018
      - func: run-tests
        vars:
          AUTH: noauth
          CC: gcc
          LOADBALANCED: loadbalanced
          SSL: nossl
  - name: make-docs
    commands:
      - func: find-cmake-latest
      - func: make-docs
      - func: upload-docs
      - func: upload-man-pages
  - name: mock-server-test
    run_on: ubuntu2204-small
    commands:
      - func: fetch-det
      - func: run-simple-http-server
      - func: find-cmake-latest
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          add_expansions_to_env: true
          args:
            - -c
            - .evergreen/scripts/compile.sh
      - command: subprocess.exec
        type: test
        params:
          binary: bash
          working_dir: mongoc
          args:
            - -c
            - .evergreen/scripts/run-mock-server-tests.sh
  - name: openssl-static-compile-debian11-gcc
    run_on: debian11-large
    tags: [openssl-static-matrix, debian11, gcc]
    commands:
      - func: find-cmake-latest
      - func: openssl-static-compile
        vars:
          CC: gcc
          CXX: g++
  - name: openssl-static-compile-debian12-gcc
    run_on: debian12-large
    tags: [openssl-static-matrix, debian12, gcc]
    commands:
      - func: find-cmake-latest
      - func: openssl-static-compile
        vars:
          CC: gcc
          CXX: g++
  - name: openssl-static-compile-ubuntu2004-gcc
    run_on: ubuntu2004-large
    tags: [openssl-static-matrix, ubuntu2004, gcc]
    commands:
      - func: find-cmake-latest
      - func: openssl-static-compile
        vars:
          CC: gcc
          CXX: g++
  - name: openssl-static-compile-ubuntu2204-gcc
    run_on: ubuntu2204-large
    tags: [openssl-static-matrix, ubuntu2204, gcc]
    commands:
      - func: find-cmake-latest
      - func: openssl-static-compile
        vars:
          CC: gcc
          CXX: g++
  - name: openssl-static-compile-ubuntu2404-gcc
    run_on: ubuntu2404-large
    tags: [openssl-static-matrix, ubuntu2404, gcc]
    commands:
      - func: find-cmake-latest
      - func: openssl-static-compile
        vars:
          CC: gcc
          CXX: g++
  - name: sasl-cyrus-darwinssl-macos-11-arm64-clang-compile
    run_on: macos-11-arm64
    tags: [sasl-matrix-darwinssl, compile, macos-11-arm64, clang, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-darwinssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: sasl-cyrus-darwinssl-macos-11-arm64-clang-test-6.0-server-auth
    run_on: macos-11-arm64
    tags: [sasl-matrix-darwinssl, test, macos-11-arm64, clang, sasl-cyrus, auth, server, "6.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-11-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-11-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-11-arm64-clang-test-7.0-server-auth
    run_on: macos-11-arm64
    tags: [sasl-matrix-darwinssl, test, macos-11-arm64, clang, sasl-cyrus, auth, server, "7.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-11-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-11-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
    run_on: macos-14-arm64
    tags: [sasl-matrix-darwinssl, compile, macos-14-arm64, clang, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-darwinssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: sasl-cyrus-darwinssl-macos-14-arm64-clang-test-6.0-server-auth
    run_on: macos-14-arm64
    tags: [sasl-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, auth, server, "6.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-14-arm64-clang-test-7.0-server-auth
    run_on: macos-14-arm64
    tags: [sasl-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, auth, server, "7.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-14-arm64-clang-test-8.0-server-auth
    run_on: macos-14-arm64
    tags: [sasl-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, auth, server, "8.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-14-arm64-clang-test-latest-server-auth
    run_on: macos-14-arm64
    tags: [sasl-matrix-darwinssl, test, macos-14-arm64, clang, sasl-cyrus, auth, server, latest, darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-14-arm64-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-14-arm64-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-14-clang-compile
    run_on: macos-14
    tags: [sasl-matrix-darwinssl, compile, macos-14, clang, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-darwinssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: sasl-cyrus-darwinssl-macos-14-clang-test-4.2-server-auth
    run_on: macos-14
    tags: [sasl-matrix-darwinssl, test, macos-14, clang, sasl-cyrus, auth, server, "4.2", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-14-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-14-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-14-clang-test-4.4-server-auth
    run_on: macos-14
    tags: [sasl-matrix-darwinssl, test, macos-14, clang, sasl-cyrus, auth, server, "4.4", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-14-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-14-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-darwinssl-macos-14-clang-test-5.0-server-auth
    run_on: macos-14
    tags: [sasl-matrix-darwinssl, test, macos-14, clang, sasl-cyrus, auth, server, "5.0", darwinssl]
    depends_on: [{ name: sasl-cyrus-darwinssl-macos-14-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-darwinssl-macos-14-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: darwinssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-compile
    run_on: amazon2023-arm64-latest-large-m8g
    tags: [sasl-matrix-openssl, compile, amazon2023-arm64-latest-large-m8g, gcc, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-test-latest-replica-auth
    run_on: amazon2023-arm64-latest-large-m8g
    tags: [sasl-matrix-openssl, test, amazon2023-arm64-latest-large-m8g, gcc, sasl-cyrus, auth, replica, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-test-latest-server-auth
    run_on: amazon2023-arm64-latest-large-m8g
    tags: [sasl-matrix-openssl, test, amazon2023-arm64-latest-large-m8g, gcc, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-test-latest-sharded-auth
    run_on: amazon2023-arm64-latest-large-m8g
    tags: [sasl-matrix-openssl, test, amazon2023-arm64-latest-large-m8g, gcc, sasl-cyrus, auth, sharded, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-amazon2023-arm64-latest-large-m8g-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-debian11-gcc-compile
    run_on: debian11-large
    tags: [sasl-matrix-openssl, compile, debian11, gcc, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-debian12-gcc-compile
    run_on: debian12-large
    tags: [sasl-matrix-openssl, compile, debian12, gcc, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-rhel8-latest-gcc-compile
    run_on: rhel8-latest-large
    tags: [sasl-matrix-openssl, compile, rhel8-latest, gcc, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-rhel8-latest-gcc-test-4.2-server-auth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, auth, server, "4.2", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-latest-gcc-test-4.4-server-auth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, auth, server, "4.4", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-latest-gcc-test-5.0-server-auth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, auth, server, "5.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-latest-gcc-test-6.0-server-auth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, auth, server, "6.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-latest-gcc-test-7.0-server-auth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, auth, server, "7.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-latest-gcc-test-8.0-server-auth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, auth, server, "8.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-latest-gcc-test-latest-server-auth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-openssl, test, rhel8-latest, gcc, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-power-gcc-compile
    run_on: rhel8-power-large
    tags: [sasl-matrix-openssl, compile, rhel8-power, gcc, sasl-cyrus]
    patchable: false
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-rhel8-power-gcc-test-4.2-server-auth
    run_on: rhel8-power-small
    tags: [sasl-matrix-openssl, test, rhel8-power, gcc, sasl-cyrus, auth, server, "4.2", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-power-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-power-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-power-gcc-test-4.4-server-auth
    run_on: rhel8-power-small
    tags: [sasl-matrix-openssl, test, rhel8-power, gcc, sasl-cyrus, auth, server, "4.4", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-power-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-power-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-power-gcc-test-5.0-server-auth
    run_on: rhel8-power-small
    tags: [sasl-matrix-openssl, test, rhel8-power, gcc, sasl-cyrus, auth, server, "5.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-power-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-power-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-power-gcc-test-6.0-server-auth
    run_on: rhel8-power-small
    tags: [sasl-matrix-openssl, test, rhel8-power, gcc, sasl-cyrus, auth, server, "6.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-power-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-power-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-power-gcc-test-7.0-server-auth
    run_on: rhel8-power-small
    tags: [sasl-matrix-openssl, test, rhel8-power, gcc, sasl-cyrus, auth, server, "7.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-power-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-power-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-power-gcc-test-8.0-server-auth
    run_on: rhel8-power-small
    tags: [sasl-matrix-openssl, test, rhel8-power, gcc, sasl-cyrus, auth, server, "8.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-power-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-power-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-power-gcc-test-latest-server-auth
    run_on: rhel8-power-small
    tags: [sasl-matrix-openssl, test, rhel8-power, gcc, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-power-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-power-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-zseries-gcc-compile
    run_on: rhel8-zseries-large
    tags: [sasl-matrix-openssl, compile, rhel8-zseries, gcc, sasl-cyrus]
    patchable: false
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-rhel8-zseries-gcc-test-5.0-server-auth
    run_on: rhel8-zseries-small
    tags: [sasl-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, auth, server, "5.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-zseries-gcc-test-6.0-server-auth
    run_on: rhel8-zseries-small
    tags: [sasl-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, auth, server, "6.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-zseries-gcc-test-7.0-server-auth
    run_on: rhel8-zseries-small
    tags: [sasl-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, auth, server, "7.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-zseries-gcc-test-8.0-server-auth
    run_on: rhel8-zseries-small
    tags: [sasl-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, auth, server, "8.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel8-zseries-gcc-test-latest-server-auth
    run_on: rhel8-zseries-small
    tags: [sasl-matrix-openssl, test, rhel8-zseries, gcc, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-rhel8-zseries-gcc-compile }]
    patchable: false
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-rhel8-zseries-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-rhel80-gcc-compile
    run_on: rhel80-large
    tags: [sasl-matrix-openssl, compile, rhel80, gcc, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
    run_on: ubuntu2004-arm64-large
    tags: [sasl-matrix-openssl, compile, ubuntu2004-arm64, gcc, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-4.4-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, auth, server, "4.4", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-5.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, auth, server, "5.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-6.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, auth, server, "6.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-7.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, auth, server, "7.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-8.0-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, auth, server, "8.0", openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-test-latest-server-auth
    run_on: ubuntu2004-arm64-small
    tags: [sasl-matrix-openssl, test, ubuntu2004-arm64, gcc, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-ubuntu2004-arm64-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-cyrus-openssl-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [sasl-matrix-openssl, compile, ubuntu2004, clang, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu2204-clang-12-compile
    run_on: ubuntu2204-large
    tags: [sasl-matrix-openssl, compile, ubuntu2204, clang-12, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang-12
          CXX: clang++-12
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu2204-gcc-compile
    run_on: ubuntu2204-large
    tags: [sasl-matrix-openssl, compile, ubuntu2204, gcc, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu2404-clang-14-compile
    run_on: ubuntu2404-large
    tags: [sasl-matrix-openssl, compile, ubuntu2404, clang-14, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang-14
          CXX: clang++-14
      - func: upload-build
  - name: sasl-cyrus-openssl-ubuntu2404-gcc-compile
    run_on: ubuntu2404-large
    tags: [sasl-matrix-openssl, compile, ubuntu2404, gcc, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-openssl, compile, windows-vsCurrent, vs2017x64, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: x64
      - func: upload-build
  - name: sasl-cyrus-openssl-windows-2019-vs2017-x64-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-openssl, test, windows-vsCurrent, vs2017x64, sasl-cyrus, auth, server, latest, openssl]
    depends_on: [{ name: sasl-cyrus-openssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-cyrus-openssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-compile
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, compile, rhel8-latest, gcc, sasl-off]
    commands:
      - func: find-cmake-latest
      - func: sasl-off-nossl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-off-nossl-rhel8-latest-gcc-test-4.2-replica-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, replica, "4.2"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-4.2-server-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, server, "4.2"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-4.2-sharded-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, sharded, "4.2"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-4.4-replica-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, replica, "4.4"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-4.4-server-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, server, "4.4"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-4.4-sharded-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, sharded, "4.4"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-5.0-replica-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, replica, "5.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-5.0-server-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, server, "5.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-5.0-sharded-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, sharded, "5.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-6.0-replica-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, replica, "6.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-6.0-server-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, server, "6.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-6.0-sharded-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, sharded, "6.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-7.0-replica-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, replica, "7.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-7.0-server-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, server, "7.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-7.0-sharded-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, sharded, "7.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-8.0-replica-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, replica, "8.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-8.0-server-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, server, "8.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-8.0-sharded-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, sharded, "8.0"]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-latest-replica-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, replica, latest]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-latest-server-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, server, latest]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-rhel8-latest-gcc-test-latest-sharded-noauth
    run_on: rhel8-latest-large
    tags: [sasl-matrix-nossl, test, rhel8-latest, gcc, sasl-off, noauth, sharded, latest]
    depends_on: [{ name: sasl-off-nossl-rhel8-latest-gcc-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-off-nossl-rhel8-latest-gcc-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: noauth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: nossl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-off-nossl-ubuntu2204-gcc-compile
    run_on: ubuntu2204-large
    tags: [sasl-matrix-nossl, compile, ubuntu2204, gcc, sasl-off]
    commands:
      - func: find-cmake-latest
      - func: sasl-off-nossl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-off-nossl-ubuntu2404-gcc-compile
    run_on: ubuntu2404-large
    tags: [sasl-matrix-nossl, compile, ubuntu2404, gcc, sasl-off]
    commands:
      - func: find-cmake-latest
      - func: sasl-off-nossl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-off-nossl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-nossl, compile, windows-vsCurrent, vs2017x64, sasl-off]
    commands:
      - func: find-cmake-latest
      - func: sasl-off-nossl-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: x64
      - func: upload-build
  - name: sasl-off-winssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, vs2017x64, sasl-off]
    commands:
      - func: find-cmake-latest
      - func: sasl-off-winssl-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: x64
      - func: upload-build
  - name: sasl-off-winssl-windows-2019-vs2017-x86-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, vs2017x86, sasl-off]
    commands:
      - func: find-cmake-latest
      - func: sasl-off-winssl-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: Win32
      - func: upload-build
  - name: sasl-sspi-winssl-windows-2019-mingw-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, mingw, sasl-sspi]
    commands:
      - func: find-cmake-latest
      - func: sasl-sspi-winssl-compile
        vars:
          CC: gcc
          CXX: g++
      - func: upload-build
  - name: sasl-sspi-winssl-windows-2019-mingw-test-8.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, mingw, sasl-sspi, auth, server, "8.0", winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-mingw-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-mingw-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-mingw-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, mingw, sasl-sspi, auth, server, latest, winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-mingw-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-mingw-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: gcc }
            - { key: CXX, value: g++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, vs2017x64, sasl-sspi]
    commands:
      - func: find-cmake-latest
      - func: sasl-sspi-winssl-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: x64
      - func: upload-build
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-test-4.2-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-sspi, auth, server, "4.2", winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-test-4.4-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-sspi, auth, server, "4.4", winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-test-5.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-sspi, auth, server, "5.0", winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-test-6.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-sspi, auth, server, "6.0", winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-test-7.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-sspi, auth, server, "7.0", winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-test-8.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-sspi, auth, server, "8.0", winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x64-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x64, sasl-sspi, auth, server, latest, winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x64-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x64-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: x64 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x86-compile
    run_on: windows-vsCurrent-large
    tags: [sasl-matrix-winssl, compile, windows-vsCurrent, vs2017x86, sasl-sspi]
    commands:
      - func: find-cmake-latest
      - func: sasl-sspi-winssl-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: Win32
      - func: upload-build
  - name: sasl-sspi-winssl-windows-2019-vs2017-x86-test-8.0-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x86, sasl-sspi, auth, server, "8.0", winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x86-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x86-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: Win32 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sasl-sspi-winssl-windows-2019-vs2017-x86-test-latest-server-auth
    run_on: windows-vsCurrent-small
    tags: [sasl-matrix-winssl, test, windows-vsCurrent, vs2017x86, sasl-sspi, auth, server, latest, winssl]
    depends_on: [{ name: sasl-sspi-winssl-windows-2019-vs2017-x86-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: sasl-sspi-winssl-windows-2019-vs2017-x86-compile
      - command: expansions.update
        params:
          updates:
            - { key: CMAKE_GENERATOR, value: Visual Studio 15 2017 }
            - { key: CMAKE_GENERATOR_PLATFORM, value: Win32 }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: winssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: sbom
    run_on: rhel80-small
    tags: [sbom, rhel80]
    commands:
      - func: sbom
  - name: scan-build-macos-14-arm64-clang
    run_on: macos-14-arm64
    tags: [scan-build-matrix, macos-14-arm64, clang]
    commands:
      - func: find-cmake-latest
      - func: scan-build
        vars:
          CC: clang
          CXX: clang++
      - func: upload scan artifacts
  - name: scan-build-ubuntu2004-arm64-clang
    run_on: ubuntu2004-arm64-large
    tags: [scan-build-matrix, ubuntu2004-arm64, clang]
    commands:
      - func: find-cmake-latest
      - func: scan-build
        vars:
          CC: clang
          CXX: clang++
      - func: upload scan artifacts
  - name: scan-build-ubuntu2004-clang-i686
    run_on: ubuntu2004-large
    tags: [scan-build-matrix, ubuntu2004, clang, i686]
    commands:
      - func: find-cmake-latest
      - func: scan-build
        vars:
          CC: clang
          CXX: clang++
          MARCH: i686
      - func: upload scan artifacts
  - name: std-c11-debian11-gcc-compile
    run_on: debian11-large
    tags: [std-matrix, debian11, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-10
          CXX: g++-10
          C_STD_VERSION: 11
  - name: std-c11-rhel7-latest-gcc-compile
    run_on: rhel7-latest-large
    tags: [std-matrix, rhel7-latest, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 11
  - name: std-c11-rhel80-clang-compile
    run_on: rhel80-large
    tags: [std-matrix, rhel80, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 11
  - name: std-c11-rhel80-gcc-compile
    run_on: rhel80-large
    tags: [std-matrix, rhel80, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 11
  - name: std-c11-rhel84-clang-compile
    run_on: rhel84-large
    tags: [std-matrix, rhel84, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 11
  - name: std-c11-rhel84-gcc-compile
    run_on: rhel84-large
    tags: [std-matrix, rhel84, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 11
  - name: std-c11-rhel90-clang-compile
    run_on: rhel90-large
    tags: [std-matrix, rhel90, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 11
  - name: std-c11-rhel90-gcc-compile
    run_on: rhel90-large
    tags: [std-matrix, rhel90, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 11
  - name: std-c11-rhel91-clang-compile
    run_on: rhel91-large
    tags: [std-matrix, rhel91, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 11
  - name: std-c11-rhel92-clang-compile
    run_on: rhel92-large
    tags: [std-matrix, rhel92, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 11
  - name: std-c11-rhel92-gcc-compile
    run_on: rhel92-large
    tags: [std-matrix, rhel92, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 11
  - name: std-c11-rhel93-clang-compile
    run_on: rhel93-large
    tags: [std-matrix, rhel93, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 11
  - name: std-c11-rhel94-clang-compile
    run_on: rhel94-large
    tags: [std-matrix, rhel94, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 11
  - name: std-c11-rhel94-gcc-compile
    run_on: rhel94-large
    tags: [std-matrix, rhel94, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 11
  - name: std-c11-rhel95-clang-compile
    run_on: rhel95-large
    tags: [std-matrix, rhel95, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 11
  - name: std-c11-rhel95-gcc-compile
    run_on: rhel95-large
    tags: [std-matrix, rhel95, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 11
  - name: std-c11-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang-10
          CXX: clang++-10
          C_STD_VERSION: 11
  - name: std-c11-ubuntu2004-gcc-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-9
          CXX: g++-9
          C_STD_VERSION: 11
  - name: std-c11-ubuntu2204-clang-compile
    run_on: ubuntu2204-large
    tags: [std-matrix, ubuntu2204, clang, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang-12
          CXX: clang++-12
          C_STD_VERSION: 11
  - name: std-c11-ubuntu2404-gcc-compile
    run_on: ubuntu2404-large
    tags: [std-matrix, ubuntu2404, gcc, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-13
          CXX: g++-13
          C_STD_VERSION: 11
  - name: std-c11-windows-2019-vs2015-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2015x64, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 14 2015
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 11
  - name: std-c11-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2017x64, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 11
  - name: std-c11-windows-2019-vs2019-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2019x64, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 11
  - name: std-c11-windows-2019-vs2022-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2022x64, compile, std-c11]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 17 2022
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 11
  - name: std-c17-debian11-gcc-compile
    run_on: debian11-large
    tags: [std-matrix, debian11, gcc, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-10
          CXX: g++-10
          C_STD_VERSION: 17
  - name: std-c17-rhel80-clang-compile
    run_on: rhel80-large
    tags: [std-matrix, rhel80, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 17
  - name: std-c17-rhel80-gcc-compile
    run_on: rhel80-large
    tags: [std-matrix, rhel80, gcc, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 17
  - name: std-c17-rhel84-clang-compile
    run_on: rhel84-large
    tags: [std-matrix, rhel84, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 17
  - name: std-c17-rhel84-gcc-compile
    run_on: rhel84-large
    tags: [std-matrix, rhel84, gcc, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 17
  - name: std-c17-rhel90-clang-compile
    run_on: rhel90-large
    tags: [std-matrix, rhel90, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 17
  - name: std-c17-rhel90-gcc-compile
    run_on: rhel90-large
    tags: [std-matrix, rhel90, gcc, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 17
  - name: std-c17-rhel91-clang-compile
    run_on: rhel91-large
    tags: [std-matrix, rhel91, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 17
  - name: std-c17-rhel92-clang-compile
    run_on: rhel92-large
    tags: [std-matrix, rhel92, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 17
  - name: std-c17-rhel92-gcc-compile
    run_on: rhel92-large
    tags: [std-matrix, rhel92, gcc, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 17
  - name: std-c17-rhel93-clang-compile
    run_on: rhel93-large
    tags: [std-matrix, rhel93, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 17
  - name: std-c17-rhel94-clang-compile
    run_on: rhel94-large
    tags: [std-matrix, rhel94, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 17
  - name: std-c17-rhel94-gcc-compile
    run_on: rhel94-large
    tags: [std-matrix, rhel94, gcc, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 17
  - name: std-c17-rhel95-clang-compile
    run_on: rhel95-large
    tags: [std-matrix, rhel95, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 17
  - name: std-c17-rhel95-gcc-compile
    run_on: rhel95-large
    tags: [std-matrix, rhel95, gcc, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 17
  - name: std-c17-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang-10
          CXX: clang++-10
          C_STD_VERSION: 17
  - name: std-c17-ubuntu2004-gcc-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, gcc, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-9
          CXX: g++-9
          C_STD_VERSION: 17
  - name: std-c17-ubuntu2204-clang-compile
    run_on: ubuntu2204-large
    tags: [std-matrix, ubuntu2204, clang, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang-12
          CXX: clang++-12
          C_STD_VERSION: 17
  - name: std-c17-ubuntu2404-gcc-compile
    run_on: ubuntu2404-large
    tags: [std-matrix, ubuntu2404, gcc, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-13
          CXX: g++-13
          C_STD_VERSION: 17
  - name: std-c17-windows-2019-vs2019-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2019x64, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 17
  - name: std-c17-windows-2019-vs2022-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2022x64, compile, std-c17]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 17 2022
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 17
  - name: std-c23-debian11-gcc-compile
    run_on: debian11-large
    tags: [std-matrix, debian11, gcc, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-10
          CXX: g++-10
          C_STD_VERSION: 23
  - name: std-c23-rhel84-clang-compile
    run_on: rhel84-large
    tags: [std-matrix, rhel84, clang, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 23
  - name: std-c23-rhel90-clang-compile
    run_on: rhel90-large
    tags: [std-matrix, rhel90, clang, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 23
  - name: std-c23-rhel90-gcc-compile
    run_on: rhel90-large
    tags: [std-matrix, rhel90, gcc, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 23
  - name: std-c23-rhel91-clang-compile
    run_on: rhel91-large
    tags: [std-matrix, rhel91, clang, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 23
  - name: std-c23-rhel92-clang-compile
    run_on: rhel92-large
    tags: [std-matrix, rhel92, clang, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 23
  - name: std-c23-rhel92-gcc-compile
    run_on: rhel92-large
    tags: [std-matrix, rhel92, gcc, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 23
  - name: std-c23-rhel93-clang-compile
    run_on: rhel93-large
    tags: [std-matrix, rhel93, clang, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 23
  - name: std-c23-rhel94-clang-compile
    run_on: rhel94-large
    tags: [std-matrix, rhel94, clang, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 23
  - name: std-c23-rhel94-gcc-compile
    run_on: rhel94-large
    tags: [std-matrix, rhel94, gcc, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 23
  - name: std-c23-rhel95-clang-compile
    run_on: rhel95-large
    tags: [std-matrix, rhel95, clang, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 23
  - name: std-c23-rhel95-gcc-compile
    run_on: rhel95-large
    tags: [std-matrix, rhel95, gcc, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 23
  - name: std-c23-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, clang, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang-10
          CXX: clang++-10
          C_STD_VERSION: 23
  - name: std-c23-ubuntu2004-gcc-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, gcc, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-9
          CXX: g++-9
          C_STD_VERSION: 23
  - name: std-c23-ubuntu2204-clang-compile
    run_on: ubuntu2204-large
    tags: [std-matrix, ubuntu2204, clang, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang-12
          CXX: clang++-12
          C_STD_VERSION: 23
  - name: std-c23-ubuntu2404-gcc-compile
    run_on: ubuntu2404-large
    tags: [std-matrix, ubuntu2404, gcc, compile, std-c23]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-13
          CXX: g++-13
          C_STD_VERSION: 23
  - name: std-c99-debian11-gcc-compile
    run_on: debian11-large
    tags: [std-matrix, debian11, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-10
          CXX: g++-10
          C_STD_VERSION: 99
  - name: std-c99-rhel7-latest-gcc-compile
    run_on: rhel7-latest-large
    tags: [std-matrix, rhel7-latest, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 99
  - name: std-c99-rhel80-clang-compile
    run_on: rhel80-large
    tags: [std-matrix, rhel80, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 99
  - name: std-c99-rhel80-gcc-compile
    run_on: rhel80-large
    tags: [std-matrix, rhel80, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 99
  - name: std-c99-rhel84-clang-compile
    run_on: rhel84-large
    tags: [std-matrix, rhel84, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 99
  - name: std-c99-rhel84-gcc-compile
    run_on: rhel84-large
    tags: [std-matrix, rhel84, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 99
  - name: std-c99-rhel90-clang-compile
    run_on: rhel90-large
    tags: [std-matrix, rhel90, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 99
  - name: std-c99-rhel90-gcc-compile
    run_on: rhel90-large
    tags: [std-matrix, rhel90, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 99
  - name: std-c99-rhel91-clang-compile
    run_on: rhel91-large
    tags: [std-matrix, rhel91, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 99
  - name: std-c99-rhel92-clang-compile
    run_on: rhel92-large
    tags: [std-matrix, rhel92, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 99
  - name: std-c99-rhel92-gcc-compile
    run_on: rhel92-large
    tags: [std-matrix, rhel92, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 99
  - name: std-c99-rhel93-clang-compile
    run_on: rhel93-large
    tags: [std-matrix, rhel93, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 99
  - name: std-c99-rhel94-clang-compile
    run_on: rhel94-large
    tags: [std-matrix, rhel94, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 99
  - name: std-c99-rhel94-gcc-compile
    run_on: rhel94-large
    tags: [std-matrix, rhel94, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 99
  - name: std-c99-rhel95-clang-compile
    run_on: rhel95-large
    tags: [std-matrix, rhel95, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang
          CXX: clang++
          C_STD_VERSION: 99
  - name: std-c99-rhel95-gcc-compile
    run_on: rhel95-large
    tags: [std-matrix, rhel95, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc
          CXX: g++
          C_STD_VERSION: 99
  - name: std-c99-ubuntu2004-clang-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang-10
          CXX: clang++-10
          C_STD_VERSION: 99
  - name: std-c99-ubuntu2004-gcc-compile
    run_on: ubuntu2004-large
    tags: [std-matrix, ubuntu2004, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-9
          CXX: g++-9
          C_STD_VERSION: 99
  - name: std-c99-ubuntu2204-clang-compile
    run_on: ubuntu2204-large
    tags: [std-matrix, ubuntu2204, clang, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: clang-12
          CXX: clang++-12
          C_STD_VERSION: 99
  - name: std-c99-ubuntu2404-gcc-compile
    run_on: ubuntu2404-large
    tags: [std-matrix, ubuntu2404, gcc, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CC: gcc-13
          CXX: g++-13
          C_STD_VERSION: 99
  - name: std-c99-windows-2019-vs2015-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2015x64, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 14 2015
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 99
  - name: std-c99-windows-2019-vs2017-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2017x64, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 99
  - name: std-c99-windows-2019-vs2019-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2019x64, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 99
  - name: std-c99-windows-2019-vs2022-x64-compile
    run_on: windows-vsCurrent-large
    tags: [std-matrix, windows-vsCurrent, vs2022x64, compile, std-c99]
    commands:
      - func: find-cmake-latest
      - func: std-compile
        vars:
          CMAKE_GENERATOR: Visual Studio 17 2022
          CMAKE_GENERATOR_PLATFORM: x64
          C_STD_VERSION: 99
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, compile, rhel8-latest, clang, tsan, sasl-cyrus]
    commands:
      - func: find-cmake-latest
      - func: sasl-cyrus-openssl-compile
        vars:
          CC: clang
          CXX: clang++
      - func: upload-build
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, replica, "4.2", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, server, "4.2", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.2-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, sharded, "4.2", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.2" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, replica, "4.4", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, server, "4.4", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-4.4-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, sharded, "4.4", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "4.4" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, replica, "5.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, server, "5.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-5.0-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, sharded, "5.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "5.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, replica, "6.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, server, "6.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-6.0-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, sharded, "6.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "6.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, replica, "7.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, server, "7.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-7.0-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, sharded, "7.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "7.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, replica, "8.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, server, "8.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-8.0-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, sharded, "8.0", openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: "8.0" }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-replica-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, replica, latest, openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: replica_set }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-server-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, server, latest, openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: server }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-test-latest-sharded-auth
    run_on: rhel8-latest-large
    tags: [sanitizers-matrix-tsan, test, rhel8-latest, clang, sasl-cyrus, tsan, auth, sharded, latest, openssl]
    depends_on: [{ name: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile }]
    commands:
      - func: fetch-build
        vars:
          BUILD_NAME: tsan-sasl-cyrus-openssl-rhel8-latest-clang-compile
      - command: expansions.update
        params:
          updates:
            - { key: CC, value: clang }
            - { key: CXX, value: clang++ }
            - { key: AUTH, value: auth }
            - { key: MONGODB_VERSION, value: latest }
            - { key: TOPOLOGY, value: sharded_cluster }
            - { key: SSL, value: openssl }
      - func: fetch-det
      - func: bootstrap-mongo-orchestration
      - func: run-simple-http-server
      - func: run-tests
  - name: verify-headers
    run_on:
      - amazon2
      - debian11-large
      - debian12-large
      - ubuntu2204-large
      - ubuntu2404-large
    tags: [pr-merge-gate]
    commands:
      - func: docker-login-amazon-ecr
      - command: subprocess.exec
        type: test
        params:
          binary: ./tools/earthly.sh
          working_dir: mongoc
          include_expansions_in_env:
            - DOCKER_CONFIG
          args:
            - --buildkit-image=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub/earthly/buildkitd:v0.8.3
            - +verify-headers
            - --default_search_registry=901841024863.dkr.ecr.us-east-1.amazonaws.com/dockerhub
