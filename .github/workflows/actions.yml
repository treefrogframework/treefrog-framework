name: ActionsCI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@main
    - name: apt
      run: |
        sudo apt-get update -qq
        sudo apt install -y --no-install-recommends pkg-config qmake6 qt6-base-dev qt6-base-dev-tools qt6-tools-dev-tools qt6-declarative-dev libqt6sql6-mysql libqt6sql6-psql libqt6sql6-odbc libqt6sql6-sqlite libqt6core6 libqt6qml6 libqt6xml6 libpq5 libodbc2 libmongoc-dev libbson-dev gcc g++ clang make cmake
    - name: qmake version
      run: |
        sudo rm -f /usr/bin/qmake
        sudo ln -sf /usr/bin/qmake6 /usr/bin/qmake
        qmake -v
    - name: configure
      run: ./configure --prefix=/usr/local --spec=linux-g++
    - name: make
      run: |
        make -j4 -C src
        sudo make -C src install
        make -j4 -C tools
        sudo make -C tools install
    - name: version
      run: |
        treefrog -v
        tspawn --show-drivers
    - name: apt for test
      run: |
        sudo apt install -y --no-install-recommends redis-server memcached
        sudo service redis-server start
        sudo service memcached start
    - name: testall.sh
      run: |
        $GITHUB_WORKSPACE/src/test/testall.sh
    - name: tmaketest
      run: |
        cd $GITHUB_WORKSPACE/tools/tmake/test
        qmake tmaketest.pro
        make -j4
        ./tmaketest.sh
    - name: releasetest
      run: |
        $GITHUB_WORKSPACE/tools/test/releasetest/releasetest

  build-ubuntu-sharedlink:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@main
    - name: apt
      run: |
        sudo apt-get update -qq
        sudo apt install -y --no-install-recommends pkg-config qmake6 qt6-base-dev qt6-base-dev-tools qt6-tools-dev-tools qt6-declarative-dev libqt6sql6-mysql libqt6sql6-psql libqt6sql6-odbc libqt6sql6-sqlite libqt6core6 libqt6qml6 libqt6xml6 libpq5 libodbc2 libmongoc-dev libbson-dev liblz4-dev gcc g++ clang make cmake
    - name: qmake version
      run: |
        sudo rm -f /usr/bin/qmake
        sudo ln -sf /usr/bin/qmake6 /usr/bin/qmake
        qmake -v
    - name: configure
      run: ./configure --prefix=/usr/local --enable-shared-mongoc --enable-shared-lz4 --spec=linux-clang
    - name: make
      run: |
        make -j4 -C src
        sudo make -C src install
        make -j4 -C tools
        sudo make -C tools install
    - name: version
      run: |
        treefrog -v
        tspawn --show-drivers
    - name: apt for test
      run: |
        sudo apt install -y --no-install-recommends redis-server memcached
        sudo service redis-server start
        sudo service memcached start
    - name: testall.sh
      run: |
        $GITHUB_WORKSPACE/src/test/testall.sh
    - name: tmaketest
      run: |
        cd $GITHUB_WORKSPACE/tools/tmake/test
        qmake tmaketest.pro
        make -j4
        ./tmaketest.sh
    - name: releasetest
      run: |
        $GITHUB_WORKSPACE/tools/test/releasetest/releasetest

  build-ubuntu22:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@main
    - name: apt
      run: |
        sudo apt-get update -qq
        sudo apt install -y --no-install-recommends pkg-config qmake6 qt6-base-dev qt6-base-dev-tools qt6-tools-dev-tools qt6-declarative-dev libqt6sql6-mysql libqt6sql6-psql libqt6sql6-odbc libqt6sql6-sqlite libqt6core6 libqt6qml6 libqt6xml6 libpq5 libodbc2 libmongoc-dev libbson-dev liblz4-dev gcc g++ clang make cmake
    - name: qmake version
      run: |
        sudo rm -f /usr/bin/qmake
        sudo ln -sf /usr/bin/qmake6 /usr/bin/qmake
        qmake -v
    - name: configure
      run: |
        ./configure --prefix=/usr/local --spec=linux-g++
    - name: make
      run: |
        make -j4 -C src
        sudo make -C src install
        make -j4 -C tools
        sudo make -C tools install
    - name: version
      run: |
        treefrog -v
        tspawn --show-drivers
    - name: apt for test
      run: |
        sudo apt install -y --no-install-recommends redis-server memcached
        sudo service redis-server start
        sudo service memcached start
    - name: testall.sh
      run: |
        $GITHUB_WORKSPACE/src/test/testall.sh
    - name: tmaketest
      run: |
        cd $GITHUB_WORKSPACE/tools/tmake/test
        qmake tmaketest.pro
        make -j4
        ./tmaketest.sh
    - name: releasetest
      run: |
        $GITHUB_WORKSPACE/tools/test/releasetest/releasetest

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - name: Homebrew
      run: |
        brew install qt6 jq
        brew link qt
    - name: configure
      run: ./configure --prefix=/usr/local
    - name: build
      run: |
        make -j4 -C src
        sudo make -C src install
        make -j4 -C tools
        sudo make -C tools install
    - name: version
      run: |
        treefrog -v
        tspawn --show-drivers

  build-macos-sharedlink:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@main
    - name: Homebrew
      run: |
        brew install qt6 pkg-config jq mongo-c-driver gflags glog lz4
        brew link qt
    - name: configure
      run: ./configure --prefix=/usr/local --enable-shared-mongoc --enable-shared-glog --enable-shared-lz4
    - name: build
      run: |
        make -j4 -C src
        sudo make -C src install
        make -j4 -C tools
        sudo make -C tools install
    - name: version
      run: |
        treefrog -v
        tspawn --show-drivers
    - name: Homebrew for test
      run: |
        brew install redis memcached
        brew services start redis
        brew services start memcached
    - name: testall.sh
      run: |
        $GITHUB_WORKSPACE/src/test/testall.sh
    - name: releasetest
      run: |
        $GITHUB_WORKSPACE/tools/test/releasetest/releasetest

  build-windows-msvc2022-qt67:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@main
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.7.3'
        host: 'windows'
        target: 'desktop'
    - name: Install VisualStudio tools
      run: |
        #choco install visualstudio2022community -y --package-parameters "--includeRecommended --includeOptional"
        choco install visualstudio2022community -y
        choco install visualstudio2022-workload-nativedesktop -y
        #choco install visualstudio2022-workload-vctools -y
        #choco install visualstudio2022buildtools
    - name: Build for debug mode
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
        set CL=/MP
        qmake -version
        call configure.bat --enable-debug
        cd src
        nmake
        nmake install
        cd test
        call testall.bat
        cd ..\..\tools
        nmake
        nmake install
    - name: Build for release mode
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
        set CL=/MP
        call configure.bat
        cd src
        nmake
        nmake install
        cd ..\tools
        nmake
        nmake install
        cd test
        releasetest\releasetest.bat

  build-windows-msvc2019-qt67:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@main
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.7.3'
        host: 'windows'
        target: 'desktop'
    - name: Install VisualStudio tools
      run: |
        choco install visualstudio2019community -y --package-parameters "--includeRecommended"
        choco install visualstudio2019-workload-nativedesktop -y
        # choco install visualstudio2019-workload-vctools -y
        # choco install visualstudio2019buildtools
    - name: Build for debug mode
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
        where cl
        where nmake
        set CL=/MP
        qmake -version
        call configure.bat --enable-debug
        cd src
        nmake
        nmake install
        cd test
        call testall.bat
        cd ..\..\tools
        nmake
        nmake install
    - name: Build for release mode
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
        set CL=/MP
        call configure.bat
        cd src
        nmake
        nmake install
        cd ..\tools
        nmake
        nmake install
        cd test
        releasetest\releasetest.bat

  build-windows-msvc2019-qt65:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@main
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.5.2'
        host: 'windows'
        target: 'desktop'
    - name: Install VisualStudio tools
      run: |
        choco install visualstudio2019community -y
        choco install visualstudio2019-workload-nativedesktop -y
        # choco install visualstudio2019-workload-vctools -y
        # choco install visualstudio2019buildtools
    - name: Build for debug mode
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
        where cl
        where nmake
        set CL=/MP
        qmake -version
        call configure.bat --enable-debug
        cd src
        nmake
        nmake install
        cd test
        call testall.bat
        cd ..\..\tools
        nmake
        nmake install
    - name: Build for release mode
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
        set CL=/MP
        call configure.bat
        cd src
        nmake
        nmake install
        cd ..\tools
        nmake
        nmake install
        cd test
        releasetest\releasetest.bat

  build-windows-msvc2019-qt62:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@main
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.2.2'
        host: 'windows'
        target: 'desktop'
    - name: Install VisualStudio tools
      run: |
        # choco install visualstudio2019community -y
        choco install visualstudio2019-workload-nativedesktop -y
        # choco install visualstudio2019community -y --package-parameters "--includeRecommended --includeOptional"
        # choco install visualstudio2019-workload-vctools -y
        # choco install visualstudio2019buildtools
        # choco install visualstudio2019-workload-nativedesktop
        # choco install jom
    - name: Build for debug mode
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
        where cl
        where nmake
        set CL=/MP
        qmake -version
        call configure.bat --enable-debug
        cd src
        nmake
        nmake install
        cd test
        call testall.bat
        cd ..\..\tools
        nmake
        nmake install
    - name: Build for release mode
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
        set CL=/MP
        call configure.bat
        cd src
        nmake
        nmake install
        cd ..\tools
        nmake
        nmake install
        cd test
        releasetest\releasetest.bat
